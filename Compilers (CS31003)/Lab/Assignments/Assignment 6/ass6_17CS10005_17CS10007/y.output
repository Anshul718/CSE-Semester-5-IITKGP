Terminals unused in grammar

   STRUCT_
   TYPEDEF_
   UNION_


State 354 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 N: %empty

    3 primary_exp: IDENTIFIER
    4            | CHAR_CONSTANT
    5            | STRING_LITERAL
    6            | INT_CONSTANT
    7            | FLOAT_CONSTANT
    8            | '(' exp ')'

    9 postfix_exp: primary_exp
   10            | postfix_exp '(' ')'
   11            | postfix_exp POINTER_OP IDENTIFIER
   12            | postfix_exp INCREMENT_OP
   13            | postfix_exp '(' argument_exp_list ')'
   14            | postfix_exp '[' exp ']'
   15            | postfix_exp '.' IDENTIFIER
   16            | '(' type_name ')' '{' initializer_list '}'
   17            | '(' type_name ')' '{' initializer_list ',' '}'
   18            | postfix_exp DECREMENT_OP

   19 argument_exp_list: assignment_exp
   20                  | argument_exp_list ',' assignment_exp

   21 unary_exp: DECREMENT_OP unary_exp
   22          | postfix_exp
   23          | INCREMENT_OP unary_exp
   24          | unary_op cast_exp
   25          | SIZEOF_ unary_exp
   26          | SIZEOF_ '(' type_name ')'

   27 unary_op: '&'
   28         | '+'
   29         | '-'
   30         | '~'
   31         | '*'
   32         | '!'

   33 cast_exp: unary_exp
   34         | '(' type_name ')' cast_exp

   35 multiplicative_exp: cast_exp
   36                   | multiplicative_exp '/' cast_exp
   37                   | multiplicative_exp '*' cast_exp
   38                   | multiplicative_exp '%' cast_exp

   39 additive_exp: multiplicative_exp
   40             | additive_exp '-' multiplicative_exp
   41             | additive_exp '+' multiplicative_exp

   42 shift_exp: additive_exp
   43          | shift_exp LEFT_SHIFT additive_exp
   44          | shift_exp RIGHT_SHIFT additive_exp

   45 relational_exp: shift_exp
   46               | relational_exp '<' shift_exp
   47               | relational_exp '>' shift_exp
   48               | relational_exp LESS_EQ_OP shift_exp
   49               | relational_exp GREATER_EQ_OP shift_exp

   50 equality_exp: relational_exp
   51             | equality_exp EQ_OP relational_exp
   52             | equality_exp NOT_EQ_OP relational_exp

   53 and_exp: equality_exp
   54        | and_exp '&' equality_exp

   55 exclusive_or_exp: and_exp
   56                 | exclusive_or_exp '^' and_exp

   57 inclusive_or_exp: exclusive_or_exp
   58                 | inclusive_or_exp '|' exclusive_or_exp

   59 logical_and_exp: inclusive_or_exp
   60                | logical_and_exp N AND_OP M inclusive_or_exp N

   61 logical_or_exp: logical_and_exp
   62               | logical_or_exp N OR_OP M logical_and_exp N

   63 conditional_exp: logical_or_exp
   64                | logical_or_exp N '?' M exp N ':' M conditional_exp

   65 assignment_exp: conditional_exp
   66               | unary_exp assignment_op assignment_exp

   67 assignment_op: '='
   68              | MUL_ASSIGN
   69              | DIV_ASSIGN
   70              | MOD_ASSIGN
   71              | ADD_ASSIGN
   72              | SUB_ASSIGN
   73              | LEFT_ASSIGN
   74              | RIGHT_ASSIGN
   75              | AND_ASSIGN
   76              | XOR_ASSIGN
   77              | OR_ASSIGN

   78 exp: assignment_exp
   79    | exp ',' assignment_exp

   80 constant_exp: conditional_exp

   81 declaration: declaration_specifiers ';'
   82            | declaration_specifiers init_declarator_list ';'

   83 declaration_specifiers: storage_class_specifier
   84                       | storage_class_specifier declaration_specifiers
   85                       | type_specifier
   86                       | type_specifier declaration_specifiers
   87                       | type_qualifier
   88                       | type_qualifier declaration_specifiers
   89                       | function_specifier
   90                       | function_specifier declaration_specifiers

   91 init_declarator_list: init_declarator
   92                     | init_declarator_list ',' init_declarator

   93 init_declarator: declarator
   94                | declarator '=' initializer

   95 storage_class_specifier: EXTERN_
   96                        | STATIC_
   97                        | AUTO_
   98                        | REGISTER_

   99 type_specifier: VOID_
  100               | CHAR_
  101               | SHORT_
  102               | INT_
  103               | LONG_
  104               | FLOAT_
  105               | DOUBLE_
  106               | SIGNED_
  107               | UNSIGNED_
  108               | BOOL_
  109               | COMPLEX_
  110               | IMAGINARY_
  111               | enum_specifier

  112 specifier_qualifier_list: type_specifier
  113                         | type_specifier specifier_qualifier_list
  114                         | type_qualifier
  115                         | type_qualifier specifier_qualifier_list

  116 enum_specifier: ENUM_ '{' enumerator_list '}'
  117               | ENUM_ IDENTIFIER '{' enumerator_list '}'
  118               | ENUM_ '{' enumerator_list ',' '}'
  119               | ENUM_ IDENTIFIER '{' enumerator_list ',' '}'
  120               | ENUM_ IDENTIFIER

  121 enumerator_list: enumerator
  122                | enumerator_list ',' enumerator

  123 enumerator: enumeration_constant
  124           | enumeration_constant '=' constant_exp

  125 enumeration_constant: IDENTIFIER

  126 type_qualifier: CONST_
  127               | RESTRICTED_
  128               | VOLATILE_

  129 function_specifier: INLINE_

  130 declarator: pointer direct_declarator
  131           | direct_declarator

  132 direct_declarator: IDENTIFIER
  133                  | '(' declarator ')'
  134                  | direct_declarator '[' type_qualifier_list_opt assignment_exp_opt ']'
  135                  | direct_declarator '[' STATIC_ type_qualifier_list_opt assignment_exp ']'
  136                  | direct_declarator '[' type_qualifier_list STATIC_ assignment_exp ']'
  137                  | direct_declarator '[' type_qualifier_list_opt '*' ']'
  138                  | direct_declarator '(' parameter_type_list_opt ')'
  139                  | direct_declarator '(' identifier_list ')'

  140 assignment_exp_opt: assignment_exp
  141                   | %empty

  142 type_qualifier_list_opt: type_qualifier_list
  143                        | %empty

  144 pointer: '*'
  145        | '*' type_qualifier_list
  146        | '*' pointer
  147        | '*' type_qualifier_list pointer

  148 type_qualifier_list: type_qualifier
  149                    | type_qualifier_list type_qualifier

  150 parameter_type_list_opt: parameter_type_list
  151                        | %empty

  152 parameter_type_list: parameter_list
  153                    | parameter_list ',' ELLIPSIS

  154 parameter_list: parameter_declaration
  155               | parameter_list ',' parameter_declaration

  156 parameter_declaration: declaration_specifiers declarator
  157                      | declaration_specifiers

  158 identifier_list: IDENTIFIER
  159                | identifier_list ',' IDENTIFIER

  160 type_name: specifier_qualifier_list

  161 initializer: assignment_exp
  162            | '{' initializer_list '}'
  163            | '{' initializer_list ',' '}'

  164 initializer_list: initializer
  165                 | designation initializer
  166                 | initializer_list ',' initializer
  167                 | initializer_list ',' designation initializer

  168 designation: designator_list '='

  169 designator_list: designator
  170                | designator_list designator

  171 designator: '[' constant_exp ']'
  172           | '.' IDENTIFIER

  173 statement: labeled_statement
  174          | compound_statement
  175          | expression_statement
  176          | selection_statement
  177          | iteration_statement
  178          | jump_statement

  179 labeled_statement: IDENTIFIER ':' statement
  180                  | CASE_ constant_exp ':' statement
  181                  | DEFAULT_ ':' statement

  182 compound_statement: '{' '}'
  183                   | '{' block_item_list '}'

  184 block_item_list: block_item
  185                | block_item_list M block_item

  186 block_item: declaration
  187           | statement

  188 expression_statement: ';'
  189                     | exp ';'

  190 selection_statement: IF_ '(' exp N ')' M statement N
  191                    | IF_ '(' exp N ')' M statement N ELSE_ M statement N
  192                    | SWITCH_ '(' exp ')' statement

  193 iteration_statement: WHILE_ M '(' exp N ')' M statement
  194                    | DO_ M statement M WHILE_ '(' exp ')' ';'
  195                    | FOR_ '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement
  196                    | FOR_ '(' declaration expression_opt ';' expression_opt ')' statement

  197 expression_opt: exp
  198               | %empty

  199 jump_statement: GOTO_ IDENTIFIER ';'
  200               | CONTINUE_ ';'
  201               | BREAK_ ';'
  202               | RETURN_ ';'
  203               | RETURN_ exp ';'

  204 translation_unit: external_declaration
  205                 | translation_unit external_declaration

  206 external_declaration: function_definition
  207                     | declaration

  208 function_definition: declaration_specifiers declarator declaration_list compound_statement
  209                    | declaration_specifiers declarator compound_statement

  210 declaration_list: declaration
  211                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
'!' (33) 32
'%' (37) 38
'&' (38) 27 54
'(' (40) 8 10 13 16 17 26 34 133 138 139 190 191 192 193 194 195 196
')' (41) 8 10 13 16 17 26 34 133 138 139 190 191 192 193 194 195 196
'*' (42) 31 37 137 144 145 146 147
'+' (43) 28 41
',' (44) 17 20 79 92 118 119 122 153 155 159 163 166 167
'-' (45) 29 40
'.' (46) 15 172
'/' (47) 36
':' (58) 64 179 180 181
';' (59) 81 82 188 189 194 195 196 199 200 201 202 203
'<' (60) 46
'=' (61) 67 94 124 168
'>' (62) 47
'?' (63) 64
'[' (91) 14 134 135 136 137 171
']' (93) 14 134 135 136 137 171
'^' (94) 56
'{' (123) 16 17 116 117 118 119 162 163 182 183
'|' (124) 58
'}' (125) 16 17 116 117 118 119 162 163 182 183
'~' (126) 30
error (256)
DIV_ASSIGN (258) 69
ELLIPSIS (259) 153
EQ_OP (260) 51
LEFT_SHIFT (261) 43
AND_ASSIGN (262) 75
AND_OP (263) 60
SUB_ASSIGN (264) 72
DECREMENT_OP (265) 18 21
RIGHT_SHIFT (266) 44
MUL_ASSIGN (267) 68
GREATER_EQ_OP (268) 49
LESS_EQ_OP (269) 48
POINTER_OP (270) 11
INCREMENT_OP (271) 12 23
LEFT_ASSIGN (272) 73
RIGHT_ASSIGN (273) 74
XOR_ASSIGN (274) 76
NOT_EQ_OP (275) 52
OR_OP (276) 62
OR_ASSIGN (277) 77
MOD_ASSIGN (278) 70
ADD_ASSIGN (279) 71
DOUBLE_ (280) 105
DEFAULT_ (281) 181
BREAK_ (282) 201
BOOL_ (283) 108
STRUCT_ (284)
SIGNED_ (285) 106
EXTERN_ (286) 95
ELSE_ (287) 191
CONTINUE_ (288) 200
SHORT_ (289) 101
SWITCH_ (290) 192
TYPEDEF_ (291)
AUTO_ (292) 97
RETURN_ (293) 202 203
WHILE_ (294) 193 194
GOTO_ (295) 199
UNION_ (296)
INLINE_ (297) 129
ENUM_ (298) 116 117 118 119 120
CHAR_ (299) 100
CONST_ (300) 126
DO_ (301) 194
REGISTER_ (302) 98
RESTRICTED_ (303) 127
CASE_ (304) 180
IF_ (305) 190 191
SIZEOF_ (306) 25 26
FLOAT_ (307) 104
LONG_ (308) 103
IMAGINARY_ (309) 110
STATIC_ (310) 96 135 136
FOR_ (311) 195 196
UNSIGNED_ (312) 107
VOLATILE_ (313) 128
COMPLEX_ (314) 109
VOID_ (315) 99
INT_ (316) 102
IDENTIFIER (317) 3 11 15 117 119 120 125 132 158 159 172 179 199
STRING_LITERAL (318) 5
INT_CONSTANT (319) 6
FLOAT_CONSTANT (320) 7
CHAR_CONSTANT (321) 4


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
M (92)
    on left: 1, on right: 60 62 64 185 190 191 193 194 195
N (93)
    on left: 2, on right: 60 62 64 190 191 193 195
primary_exp (94)
    on left: 3 4 5 6 7 8, on right: 9
postfix_exp (95)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 10 11 12 13 14
    15 18 22
argument_exp_list (96)
    on left: 19 20, on right: 13 20
unary_exp (97)
    on left: 21 22 23 24 25 26, on right: 21 23 25 33 66
unary_op (98)
    on left: 27 28 29 30 31 32, on right: 24
cast_exp (99)
    on left: 33 34, on right: 24 34 35 36 37 38
multiplicative_exp (100)
    on left: 35 36 37 38, on right: 36 37 38 39 40 41
additive_exp (101)
    on left: 39 40 41, on right: 40 41 42 43 44
shift_exp (102)
    on left: 42 43 44, on right: 43 44 45 46 47 48 49
relational_exp (103)
    on left: 45 46 47 48 49, on right: 46 47 48 49 50 51 52
equality_exp (104)
    on left: 50 51 52, on right: 51 52 53 54
and_exp (105)
    on left: 53 54, on right: 54 55 56
exclusive_or_exp (106)
    on left: 55 56, on right: 56 57 58
inclusive_or_exp (107)
    on left: 57 58, on right: 58 59 60
logical_and_exp (108)
    on left: 59 60, on right: 60 61 62
logical_or_exp (109)
    on left: 61 62, on right: 62 63 64
conditional_exp (110)
    on left: 63 64, on right: 64 65 80
assignment_exp (111)
    on left: 65 66, on right: 19 20 66 78 79 135 136 140 161
assignment_op (112)
    on left: 67 68 69 70 71 72 73 74 75 76 77, on right: 66
exp (113)
    on left: 78 79, on right: 8 14 64 79 189 190 191 192 193 194 197
    203
constant_exp (114)
    on left: 80, on right: 124 171 180
declaration (115)
    on left: 81 82, on right: 186 196 207 210 211
declaration_specifiers (116)
    on left: 83 84 85 86 87 88 89 90, on right: 81 82 84 86 88 90 156
    157 208 209
init_declarator_list (117)
    on left: 91 92, on right: 82 92
init_declarator (118)
    on left: 93 94, on right: 91 92
storage_class_specifier (119)
    on left: 95 96 97 98, on right: 83 84
type_specifier (120)
    on left: 99 100 101 102 103 104 105 106 107 108 109 110 111, on right:
    85 86 112 113
specifier_qualifier_list (121)
    on left: 112 113 114 115, on right: 113 115 160
enum_specifier (122)
    on left: 116 117 118 119 120, on right: 111
enumerator_list (123)
    on left: 121 122, on right: 116 117 118 119 122
enumerator (124)
    on left: 123 124, on right: 121 122
enumeration_constant (125)
    on left: 125, on right: 123 124
type_qualifier (126)
    on left: 126 127 128, on right: 87 88 114 115 148 149
function_specifier (127)
    on left: 129, on right: 89 90
declarator (128)
    on left: 130 131, on right: 93 94 133 156 208 209
direct_declarator (129)
    on left: 132 133 134 135 136 137 138 139, on right: 130 131 134
    135 136 137 138 139
assignment_exp_opt (130)
    on left: 140 141, on right: 134
type_qualifier_list_opt (131)
    on left: 142 143, on right: 134 135 137
pointer (132)
    on left: 144 145 146 147, on right: 130 146 147
type_qualifier_list (133)
    on left: 148 149, on right: 136 142 145 147 149
parameter_type_list_opt (134)
    on left: 150 151, on right: 138
parameter_type_list (135)
    on left: 152 153, on right: 150
parameter_list (136)
    on left: 154 155, on right: 152 153 155
parameter_declaration (137)
    on left: 156 157, on right: 154 155
identifier_list (138)
    on left: 158 159, on right: 139 159
type_name (139)
    on left: 160, on right: 16 17 26 34
initializer (140)
    on left: 161 162 163, on right: 94 164 165 166 167
initializer_list (141)
    on left: 164 165 166 167, on right: 16 17 162 163 166 167
designation (142)
    on left: 168, on right: 165 167
designator_list (143)
    on left: 169 170, on right: 168 170
designator (144)
    on left: 171 172, on right: 169 170
statement (145)
    on left: 173 174 175 176 177 178, on right: 179 180 181 187 190
    191 192 193 194 195 196
labeled_statement (146)
    on left: 179 180 181, on right: 173
compound_statement (147)
    on left: 182 183, on right: 174 208 209
block_item_list (148)
    on left: 184 185, on right: 183 185
block_item (149)
    on left: 186 187, on right: 184 185
expression_statement (150)
    on left: 188 189, on right: 175
selection_statement (151)
    on left: 190 191 192, on right: 176
iteration_statement (152)
    on left: 193 194 195 196, on right: 177
expression_opt (153)
    on left: 197 198, on right: 195 196
jump_statement (154)
    on left: 199 200 201 202 203, on right: 178
translation_unit (155)
    on left: 204 205, on right: 0 205
external_declaration (156)
    on left: 206 207, on right: 204 205
function_definition (157)
    on left: 208 209, on right: 206
declaration_list (158)
    on left: 210 211, on right: 208 211


State 0

    0 $accept: . translation_unit $end

    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    EXTERN_      shift, and go to state 4
    SHORT_       shift, and go to state 5
    AUTO_        shift, and go to state 6
    INLINE_      shift, and go to state 7
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    STATIC_      shift, and go to state 16
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

  105 type_specifier: DOUBLE_ .

    $default  reduce using rule 105 (type_specifier)


State 2

  108 type_specifier: BOOL_ .

    $default  reduce using rule 108 (type_specifier)


State 3

  106 type_specifier: SIGNED_ .

    $default  reduce using rule 106 (type_specifier)


State 4

   95 storage_class_specifier: EXTERN_ .

    $default  reduce using rule 95 (storage_class_specifier)


State 5

  101 type_specifier: SHORT_ .

    $default  reduce using rule 101 (type_specifier)


State 6

   97 storage_class_specifier: AUTO_ .

    $default  reduce using rule 97 (storage_class_specifier)


State 7

  129 function_specifier: INLINE_ .

    $default  reduce using rule 129 (function_specifier)


State 8

  116 enum_specifier: ENUM_ . '{' enumerator_list '}'
  117               | ENUM_ . IDENTIFIER '{' enumerator_list '}'
  118               | ENUM_ . '{' enumerator_list ',' '}'
  119               | ENUM_ . IDENTIFIER '{' enumerator_list ',' '}'
  120               | ENUM_ . IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    '{'         shift, and go to state 33


State 9

  100 type_specifier: CHAR_ .

    $default  reduce using rule 100 (type_specifier)


State 10

  126 type_qualifier: CONST_ .

    $default  reduce using rule 126 (type_qualifier)


State 11

   98 storage_class_specifier: REGISTER_ .

    $default  reduce using rule 98 (storage_class_specifier)


State 12

  127 type_qualifier: RESTRICTED_ .

    $default  reduce using rule 127 (type_qualifier)


State 13

  104 type_specifier: FLOAT_ .

    $default  reduce using rule 104 (type_specifier)


State 14

  103 type_specifier: LONG_ .

    $default  reduce using rule 103 (type_specifier)


State 15

  110 type_specifier: IMAGINARY_ .

    $default  reduce using rule 110 (type_specifier)


State 16

   96 storage_class_specifier: STATIC_ .

    $default  reduce using rule 96 (storage_class_specifier)


State 17

  107 type_specifier: UNSIGNED_ .

    $default  reduce using rule 107 (type_specifier)


State 18

  128 type_qualifier: VOLATILE_ .

    $default  reduce using rule 128 (type_qualifier)


State 19

  109 type_specifier: COMPLEX_ .

    $default  reduce using rule 109 (type_specifier)


State 20

   99 type_specifier: VOID_ .

    $default  reduce using rule 99 (type_specifier)


State 21

  102 type_specifier: INT_ .

    $default  reduce using rule 102 (type_specifier)


State 22

  207 external_declaration: declaration .

    $default  reduce using rule 207 (external_declaration)


State 23

   81 declaration: declaration_specifiers . ';'
   82            | declaration_specifiers . init_declarator_list ';'
  208 function_definition: declaration_specifiers . declarator declaration_list compound_statement
  209                    | declaration_specifiers . declarator compound_statement

    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 35
    '*'         shift, and go to state 36
    ';'         shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 40
    direct_declarator     go to state 41
    pointer               go to state 42


State 24

   83 declaration_specifiers: storage_class_specifier .
   84                       | storage_class_specifier . declaration_specifiers

    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    EXTERN_      shift, and go to state 4
    SHORT_       shift, and go to state 5
    AUTO_        shift, and go to state 6
    INLINE_      shift, and go to state 7
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    STATIC_      shift, and go to state 16
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21

    $default  reduce using rule 83 (declaration_specifiers)

    declaration_specifiers   go to state 43
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 25

   85 declaration_specifiers: type_specifier .
   86                       | type_specifier . declaration_specifiers

    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    EXTERN_      shift, and go to state 4
    SHORT_       shift, and go to state 5
    AUTO_        shift, and go to state 6
    INLINE_      shift, and go to state 7
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    STATIC_      shift, and go to state 16
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21

    $default  reduce using rule 85 (declaration_specifiers)

    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 26

  111 type_specifier: enum_specifier .

    $default  reduce using rule 111 (type_specifier)


State 27

   87 declaration_specifiers: type_qualifier .
   88                       | type_qualifier . declaration_specifiers

    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    EXTERN_      shift, and go to state 4
    SHORT_       shift, and go to state 5
    AUTO_        shift, and go to state 6
    INLINE_      shift, and go to state 7
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    STATIC_      shift, and go to state 16
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21

    $default  reduce using rule 87 (declaration_specifiers)

    declaration_specifiers   go to state 45
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 28

   89 declaration_specifiers: function_specifier .
   90                       | function_specifier . declaration_specifiers

    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    EXTERN_      shift, and go to state 4
    SHORT_       shift, and go to state 5
    AUTO_        shift, and go to state 6
    INLINE_      shift, and go to state 7
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    STATIC_      shift, and go to state 16
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21

    $default  reduce using rule 89 (declaration_specifiers)

    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 29

    0 $accept: translation_unit . $end
  205 translation_unit: translation_unit . external_declaration

    $end         shift, and go to state 47
    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    EXTERN_      shift, and go to state 4
    SHORT_       shift, and go to state 5
    AUTO_        shift, and go to state 6
    INLINE_      shift, and go to state 7
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    STATIC_      shift, and go to state 16
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 48
    function_definition      go to state 31


State 30

  204 translation_unit: external_declaration .

    $default  reduce using rule 204 (translation_unit)


State 31

  206 external_declaration: function_definition .

    $default  reduce using rule 206 (external_declaration)


State 32

  117 enum_specifier: ENUM_ IDENTIFIER . '{' enumerator_list '}'
  119               | ENUM_ IDENTIFIER . '{' enumerator_list ',' '}'
  120               | ENUM_ IDENTIFIER .

    '{'  shift, and go to state 49

    $default  reduce using rule 120 (enum_specifier)


State 33

  116 enum_specifier: ENUM_ '{' . enumerator_list '}'
  118               | ENUM_ '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 50

    enumerator_list       go to state 51
    enumerator            go to state 52
    enumeration_constant  go to state 53


State 34

  132 direct_declarator: IDENTIFIER .

    $default  reduce using rule 132 (direct_declarator)


State 35

  133 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 35
    '*'         shift, and go to state 36

    declarator         go to state 54
    direct_declarator  go to state 41
    pointer            go to state 42


State 36

  144 pointer: '*' .
  145        | '*' . type_qualifier_list
  146        | '*' . pointer
  147        | '*' . type_qualifier_list pointer

    CONST_       shift, and go to state 10
    RESTRICTED_  shift, and go to state 12
    VOLATILE_    shift, and go to state 18
    '*'          shift, and go to state 36

    $default  reduce using rule 144 (pointer)

    type_qualifier       go to state 55
    pointer              go to state 56
    type_qualifier_list  go to state 57


State 37

   81 declaration: declaration_specifiers ';' .

    $default  reduce using rule 81 (declaration)


State 38

   82 declaration: declaration_specifiers init_declarator_list . ';'
   92 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 58
    ';'  shift, and go to state 59


State 39

   91 init_declarator_list: init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 40

   93 init_declarator: declarator .
   94                | declarator . '=' initializer
  208 function_definition: declaration_specifiers declarator . declaration_list compound_statement
  209                    | declaration_specifiers declarator . compound_statement

    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    EXTERN_      shift, and go to state 4
    SHORT_       shift, and go to state 5
    AUTO_        shift, and go to state 6
    INLINE_      shift, and go to state 7
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    STATIC_      shift, and go to state 16
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21
    '{'          shift, and go to state 60
    '='          shift, and go to state 61

    $default  reduce using rule 93 (init_declarator)

    declaration              go to state 62
    declaration_specifiers   go to state 63
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    compound_statement       go to state 64
    declaration_list         go to state 65


State 41

  131 declarator: direct_declarator .
  134 direct_declarator: direct_declarator . '[' type_qualifier_list_opt assignment_exp_opt ']'
  135                  | direct_declarator . '[' STATIC_ type_qualifier_list_opt assignment_exp ']'
  136                  | direct_declarator . '[' type_qualifier_list STATIC_ assignment_exp ']'
  137                  | direct_declarator . '[' type_qualifier_list_opt '*' ']'
  138                  | direct_declarator . '(' parameter_type_list_opt ')'
  139                  | direct_declarator . '(' identifier_list ')'

    '('  shift, and go to state 66
    '['  shift, and go to state 67

    $default  reduce using rule 131 (declarator)


State 42

  130 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 35

    direct_declarator  go to state 68


State 43

   84 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 84 (declaration_specifiers)


State 44

   86 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 86 (declaration_specifiers)


State 45

   88 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 88 (declaration_specifiers)


State 46

   90 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 90 (declaration_specifiers)


State 47

    0 $accept: translation_unit $end .

    $default  accept


State 48

  205 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 205 (translation_unit)


State 49

  117 enum_specifier: ENUM_ IDENTIFIER '{' . enumerator_list '}'
  119               | ENUM_ IDENTIFIER '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 50

    enumerator_list       go to state 69
    enumerator            go to state 52
    enumeration_constant  go to state 53


State 50

  125 enumeration_constant: IDENTIFIER .

    $default  reduce using rule 125 (enumeration_constant)


State 51

  116 enum_specifier: ENUM_ '{' enumerator_list . '}'
  118               | ENUM_ '{' enumerator_list . ',' '}'
  122 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 70
    ','  shift, and go to state 71


State 52

  121 enumerator_list: enumerator .

    $default  reduce using rule 121 (enumerator_list)


State 53

  123 enumerator: enumeration_constant .
  124           | enumeration_constant . '=' constant_exp

    '='  shift, and go to state 72

    $default  reduce using rule 123 (enumerator)


State 54

  133 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 73


State 55

  148 type_qualifier_list: type_qualifier .

    $default  reduce using rule 148 (type_qualifier_list)


State 56

  146 pointer: '*' pointer .

    $default  reduce using rule 146 (pointer)


State 57

  145 pointer: '*' type_qualifier_list .
  147        | '*' type_qualifier_list . pointer
  149 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_       shift, and go to state 10
    RESTRICTED_  shift, and go to state 12
    VOLATILE_    shift, and go to state 18
    '*'          shift, and go to state 36

    $default  reduce using rule 145 (pointer)

    type_qualifier  go to state 74
    pointer         go to state 75


State 58

   92 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 35
    '*'         shift, and go to state 36

    init_declarator    go to state 76
    declarator         go to state 77
    direct_declarator  go to state 41
    pointer            go to state 42


State 59

   82 declaration: declaration_specifiers init_declarator_list ';' .

    $default  reduce using rule 82 (declaration)


State 60

  182 compound_statement: '{' . '}'
  183                   | '{' . block_item_list '}'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DOUBLE_         shift, and go to state 1
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    BOOL_           shift, and go to state 2
    SIGNED_         shift, and go to state 3
    EXTERN_         shift, and go to state 4
    CONTINUE_       shift, and go to state 82
    SHORT_          shift, and go to state 5
    SWITCH_         shift, and go to state 83
    AUTO_           shift, and go to state 6
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    INLINE_         shift, and go to state 7
    ENUM_           shift, and go to state 8
    CHAR_           shift, and go to state 9
    CONST_          shift, and go to state 10
    DO_             shift, and go to state 87
    REGISTER_       shift, and go to state 11
    RESTRICTED_     shift, and go to state 12
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FLOAT_          shift, and go to state 13
    LONG_           shift, and go to state 14
    IMAGINARY_      shift, and go to state 15
    STATIC_         shift, and go to state 16
    FOR_            shift, and go to state 91
    UNSIGNED_       shift, and go to state 17
    VOLATILE_       shift, and go to state 18
    COMPLEX_        shift, and go to state 19
    VOID_           shift, and go to state 20
    INT_            shift, and go to state 21
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '}'             shift, and go to state 98
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp              go to state 106
    postfix_exp              go to state 107
    unary_exp                go to state 108
    unary_op                 go to state 109
    cast_exp                 go to state 110
    multiplicative_exp       go to state 111
    additive_exp             go to state 112
    shift_exp                go to state 113
    relational_exp           go to state 114
    equality_exp             go to state 115
    and_exp                  go to state 116
    exclusive_or_exp         go to state 117
    inclusive_or_exp         go to state 118
    logical_and_exp          go to state 119
    logical_or_exp           go to state 120
    conditional_exp          go to state 121
    assignment_exp           go to state 122
    exp                      go to state 123
    declaration              go to state 124
    declaration_specifiers   go to state 63
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    statement                go to state 125
    labeled_statement        go to state 126
    compound_statement       go to state 127
    block_item_list          go to state 128
    block_item               go to state 129
    expression_statement     go to state 130
    selection_statement      go to state 131
    iteration_statement      go to state 132
    jump_statement           go to state 133


State 61

   94 init_declarator: declarator '=' . initializer

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 135
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 136
    initializer         go to state 137


State 62

  210 declaration_list: declaration .

    $default  reduce using rule 210 (declaration_list)


State 63

   81 declaration: declaration_specifiers . ';'
   82            | declaration_specifiers . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 35
    '*'         shift, and go to state 36
    ';'         shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 77
    direct_declarator     go to state 41
    pointer               go to state 42


State 64

  209 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 209 (function_definition)


State 65

  208 function_definition: declaration_specifiers declarator declaration_list . compound_statement
  211 declaration_list: declaration_list . declaration

    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    EXTERN_      shift, and go to state 4
    SHORT_       shift, and go to state 5
    AUTO_        shift, and go to state 6
    INLINE_      shift, and go to state 7
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    STATIC_      shift, and go to state 16
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21
    '{'          shift, and go to state 60

    declaration              go to state 138
    declaration_specifiers   go to state 63
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    compound_statement       go to state 139


State 66

  138 direct_declarator: direct_declarator '(' . parameter_type_list_opt ')'
  139                  | direct_declarator '(' . identifier_list ')'

    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    EXTERN_      shift, and go to state 4
    SHORT_       shift, and go to state 5
    AUTO_        shift, and go to state 6
    INLINE_      shift, and go to state 7
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    STATIC_      shift, and go to state 16
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21
    IDENTIFIER   shift, and go to state 140

    $default  reduce using rule 151 (parameter_type_list_opt)

    declaration_specifiers   go to state 141
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list_opt  go to state 142
    parameter_type_list      go to state 143
    parameter_list           go to state 144
    parameter_declaration    go to state 145
    identifier_list          go to state 146


State 67

  134 direct_declarator: direct_declarator '[' . type_qualifier_list_opt assignment_exp_opt ']'
  135                  | direct_declarator '[' . STATIC_ type_qualifier_list_opt assignment_exp ']'
  136                  | direct_declarator '[' . type_qualifier_list STATIC_ assignment_exp ']'
  137                  | direct_declarator '[' . type_qualifier_list_opt '*' ']'

    CONST_       shift, and go to state 10
    RESTRICTED_  shift, and go to state 12
    STATIC_      shift, and go to state 147
    VOLATILE_    shift, and go to state 18

    $default  reduce using rule 143 (type_qualifier_list_opt)

    type_qualifier           go to state 55
    type_qualifier_list_opt  go to state 148
    type_qualifier_list      go to state 149


State 68

  130 declarator: pointer direct_declarator .
  134 direct_declarator: direct_declarator . '[' type_qualifier_list_opt assignment_exp_opt ']'
  135                  | direct_declarator . '[' STATIC_ type_qualifier_list_opt assignment_exp ']'
  136                  | direct_declarator . '[' type_qualifier_list STATIC_ assignment_exp ']'
  137                  | direct_declarator . '[' type_qualifier_list_opt '*' ']'
  138                  | direct_declarator . '(' parameter_type_list_opt ')'
  139                  | direct_declarator . '(' identifier_list ')'

    '('  shift, and go to state 66
    '['  shift, and go to state 67

    $default  reduce using rule 130 (declarator)


State 69

  117 enum_specifier: ENUM_ IDENTIFIER '{' enumerator_list . '}'
  119               | ENUM_ IDENTIFIER '{' enumerator_list . ',' '}'
  122 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 150
    ','  shift, and go to state 151


State 70

  116 enum_specifier: ENUM_ '{' enumerator_list '}' .

    $default  reduce using rule 116 (enum_specifier)


State 71

  118 enum_specifier: ENUM_ '{' enumerator_list ',' . '}'
  122 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 50
    '}'         shift, and go to state 152

    enumerator            go to state 153
    enumeration_constant  go to state 53


State 72

  124 enumerator: enumeration_constant '=' . constant_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 155
    constant_exp        go to state 156


State 73

  133 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 133 (direct_declarator)


State 74

  149 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 149 (type_qualifier_list)


State 75

  147 pointer: '*' type_qualifier_list pointer .

    $default  reduce using rule 147 (pointer)


State 76

   92 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 92 (init_declarator_list)


State 77

   93 init_declarator: declarator .
   94                | declarator . '=' initializer

    '='  shift, and go to state 61

    $default  reduce using rule 93 (init_declarator)


State 78

   21 unary_exp: DECREMENT_OP . unary_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 157
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp  go to state 106
    postfix_exp  go to state 107
    unary_exp    go to state 158
    unary_op     go to state 109


State 79

   23 unary_exp: INCREMENT_OP . unary_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 157
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp  go to state 106
    postfix_exp  go to state 107
    unary_exp    go to state 159
    unary_op     go to state 109


State 80

  181 labeled_statement: DEFAULT_ . ':' statement

    ':'  shift, and go to state 160


State 81

  201 jump_statement: BREAK_ . ';'

    ';'  shift, and go to state 161


State 82

  200 jump_statement: CONTINUE_ . ';'

    ';'  shift, and go to state 162


State 83

  192 selection_statement: SWITCH_ . '(' exp ')' statement

    '('  shift, and go to state 163


State 84

  202 jump_statement: RETURN_ . ';'
  203               | RETURN_ . exp ';'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 164

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 165


State 85

  193 iteration_statement: WHILE_ . M '(' exp N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 166


State 86

  199 jump_statement: GOTO_ . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 167


State 87

  194 iteration_statement: DO_ . M statement M WHILE_ '(' exp ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 168


State 88

  180 labeled_statement: CASE_ . constant_exp ':' statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 155
    constant_exp        go to state 169


State 89

  190 selection_statement: IF_ . '(' exp N ')' M statement N
  191                    | IF_ . '(' exp N ')' M statement N ELSE_ M statement N

    '('  shift, and go to state 170


State 90

   25 unary_exp: SIZEOF_ . unary_exp
   26          | SIZEOF_ . '(' type_name ')'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 171
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp  go to state 106
    postfix_exp  go to state 107
    unary_exp    go to state 172
    unary_op     go to state 109


State 91

  195 iteration_statement: FOR_ . '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement
  196                    | FOR_ . '(' declaration expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 173


State 92

    3 primary_exp: IDENTIFIER .
  179 labeled_statement: IDENTIFIER . ':' statement

    ':'  shift, and go to state 174

    $default  reduce using rule 3 (primary_exp)


State 93

    5 primary_exp: STRING_LITERAL .

    $default  reduce using rule 5 (primary_exp)


State 94

    6 primary_exp: INT_CONSTANT .

    $default  reduce using rule 6 (primary_exp)


State 95

    7 primary_exp: FLOAT_CONSTANT .

    $default  reduce using rule 7 (primary_exp)


State 96

    4 primary_exp: CHAR_CONSTANT .

    $default  reduce using rule 4 (primary_exp)


State 97

    8 primary_exp: '(' . exp ')'
   16 postfix_exp: '(' . type_name ')' '{' initializer_list '}'
   17            | '(' . type_name ')' '{' initializer_list ',' '}'
   34 cast_exp: '(' . type_name ')' cast_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DOUBLE_         shift, and go to state 1
    BOOL_           shift, and go to state 2
    SIGNED_         shift, and go to state 3
    SHORT_          shift, and go to state 5
    ENUM_           shift, and go to state 8
    CHAR_           shift, and go to state 9
    CONST_          shift, and go to state 10
    RESTRICTED_     shift, and go to state 12
    SIZEOF_         shift, and go to state 90
    FLOAT_          shift, and go to state 13
    LONG_           shift, and go to state 14
    IMAGINARY_      shift, and go to state 15
    UNSIGNED_       shift, and go to state 17
    VOLATILE_       shift, and go to state 18
    COMPLEX_        shift, and go to state 19
    VOID_           shift, and go to state 20
    INT_            shift, and go to state 21
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp               go to state 106
    postfix_exp               go to state 107
    unary_exp                 go to state 108
    unary_op                  go to state 109
    cast_exp                  go to state 110
    multiplicative_exp        go to state 111
    additive_exp              go to state 112
    shift_exp                 go to state 113
    relational_exp            go to state 114
    equality_exp              go to state 115
    and_exp                   go to state 116
    exclusive_or_exp          go to state 117
    inclusive_or_exp          go to state 118
    logical_and_exp           go to state 119
    logical_or_exp            go to state 120
    conditional_exp           go to state 121
    assignment_exp            go to state 122
    exp                       go to state 175
    type_specifier            go to state 176
    specifier_qualifier_list  go to state 177
    enum_specifier            go to state 26
    type_qualifier            go to state 178
    type_name                 go to state 179


State 98

  182 compound_statement: '{' '}' .

    $default  reduce using rule 182 (compound_statement)


State 99

   27 unary_op: '&' .

    $default  reduce using rule 27 (unary_op)


State 100

   28 unary_op: '+' .

    $default  reduce using rule 28 (unary_op)


State 101

   29 unary_op: '-' .

    $default  reduce using rule 29 (unary_op)


State 102

   30 unary_op: '~' .

    $default  reduce using rule 30 (unary_op)


State 103

   31 unary_op: '*' .

    $default  reduce using rule 31 (unary_op)


State 104

   32 unary_op: '!' .

    $default  reduce using rule 32 (unary_op)


State 105

  188 expression_statement: ';' .

    $default  reduce using rule 188 (expression_statement)


State 106

    9 postfix_exp: primary_exp .

    $default  reduce using rule 9 (postfix_exp)


State 107

   10 postfix_exp: postfix_exp . '(' ')'
   11            | postfix_exp . POINTER_OP IDENTIFIER
   12            | postfix_exp . INCREMENT_OP
   13            | postfix_exp . '(' argument_exp_list ')'
   14            | postfix_exp . '[' exp ']'
   15            | postfix_exp . '.' IDENTIFIER
   18            | postfix_exp . DECREMENT_OP
   22 unary_exp: postfix_exp .

    DECREMENT_OP  shift, and go to state 180
    POINTER_OP    shift, and go to state 181
    INCREMENT_OP  shift, and go to state 182
    '('           shift, and go to state 183
    '['           shift, and go to state 184
    '.'           shift, and go to state 185

    $default  reduce using rule 22 (unary_exp)


State 108

   33 cast_exp: unary_exp .
   66 assignment_exp: unary_exp . assignment_op assignment_exp

    DIV_ASSIGN    shift, and go to state 186
    AND_ASSIGN    shift, and go to state 187
    SUB_ASSIGN    shift, and go to state 188
    MUL_ASSIGN    shift, and go to state 189
    LEFT_ASSIGN   shift, and go to state 190
    RIGHT_ASSIGN  shift, and go to state 191
    XOR_ASSIGN    shift, and go to state 192
    OR_ASSIGN     shift, and go to state 193
    MOD_ASSIGN    shift, and go to state 194
    ADD_ASSIGN    shift, and go to state 195
    '='           shift, and go to state 196

    $default  reduce using rule 33 (cast_exp)

    assignment_op  go to state 197


State 109

   24 unary_exp: unary_op . cast_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp  go to state 106
    postfix_exp  go to state 107
    unary_exp    go to state 154
    unary_op     go to state 109
    cast_exp     go to state 198


State 110

   35 multiplicative_exp: cast_exp .

    $default  reduce using rule 35 (multiplicative_exp)


State 111

   36 multiplicative_exp: multiplicative_exp . '/' cast_exp
   37                   | multiplicative_exp . '*' cast_exp
   38                   | multiplicative_exp . '%' cast_exp
   39 additive_exp: multiplicative_exp .

    '*'  shift, and go to state 199
    '/'  shift, and go to state 200
    '%'  shift, and go to state 201

    $default  reduce using rule 39 (additive_exp)


State 112

   40 additive_exp: additive_exp . '-' multiplicative_exp
   41             | additive_exp . '+' multiplicative_exp
   42 shift_exp: additive_exp .

    '+'  shift, and go to state 202
    '-'  shift, and go to state 203

    $default  reduce using rule 42 (shift_exp)


State 113

   43 shift_exp: shift_exp . LEFT_SHIFT additive_exp
   44          | shift_exp . RIGHT_SHIFT additive_exp
   45 relational_exp: shift_exp .

    LEFT_SHIFT   shift, and go to state 204
    RIGHT_SHIFT  shift, and go to state 205

    $default  reduce using rule 45 (relational_exp)


State 114

   46 relational_exp: relational_exp . '<' shift_exp
   47               | relational_exp . '>' shift_exp
   48               | relational_exp . LESS_EQ_OP shift_exp
   49               | relational_exp . GREATER_EQ_OP shift_exp
   50 equality_exp: relational_exp .

    GREATER_EQ_OP  shift, and go to state 206
    LESS_EQ_OP     shift, and go to state 207
    '<'            shift, and go to state 208
    '>'            shift, and go to state 209

    $default  reduce using rule 50 (equality_exp)


State 115

   51 equality_exp: equality_exp . EQ_OP relational_exp
   52             | equality_exp . NOT_EQ_OP relational_exp
   53 and_exp: equality_exp .

    EQ_OP      shift, and go to state 210
    NOT_EQ_OP  shift, and go to state 211

    $default  reduce using rule 53 (and_exp)


State 116

   54 and_exp: and_exp . '&' equality_exp
   55 exclusive_or_exp: and_exp .

    '&'  shift, and go to state 212

    $default  reduce using rule 55 (exclusive_or_exp)


State 117

   56 exclusive_or_exp: exclusive_or_exp . '^' and_exp
   57 inclusive_or_exp: exclusive_or_exp .

    '^'  shift, and go to state 213

    $default  reduce using rule 57 (inclusive_or_exp)


State 118

   58 inclusive_or_exp: inclusive_or_exp . '|' exclusive_or_exp
   59 logical_and_exp: inclusive_or_exp .

    '|'  shift, and go to state 214

    $default  reduce using rule 59 (logical_and_exp)


State 119

   60 logical_and_exp: logical_and_exp . N AND_OP M inclusive_or_exp N
   61 logical_or_exp: logical_and_exp .

    AND_OP    reduce using rule 2 (N)
    $default  reduce using rule 61 (logical_or_exp)

    N  go to state 215


State 120

   62 logical_or_exp: logical_or_exp . N OR_OP M logical_and_exp N
   63 conditional_exp: logical_or_exp .
   64                | logical_or_exp . N '?' M exp N ':' M conditional_exp

    OR_OP     reduce using rule 2 (N)
    '?'       reduce using rule 2 (N)
    $default  reduce using rule 63 (conditional_exp)

    N  go to state 216


State 121

   65 assignment_exp: conditional_exp .

    $default  reduce using rule 65 (assignment_exp)


State 122

   78 exp: assignment_exp .

    $default  reduce using rule 78 (exp)


State 123

   79 exp: exp . ',' assignment_exp
  189 expression_statement: exp . ';'

    ','  shift, and go to state 217
    ';'  shift, and go to state 218


State 124

  186 block_item: declaration .

    $default  reduce using rule 186 (block_item)


State 125

  187 block_item: statement .

    $default  reduce using rule 187 (block_item)


State 126

  173 statement: labeled_statement .

    $default  reduce using rule 173 (statement)


State 127

  174 statement: compound_statement .

    $default  reduce using rule 174 (statement)


State 128

  183 compound_statement: '{' block_item_list . '}'
  185 block_item_list: block_item_list . M block_item

    '}'  shift, and go to state 219

    $default  reduce using rule 1 (M)

    M  go to state 220


State 129

  184 block_item_list: block_item .

    $default  reduce using rule 184 (block_item_list)


State 130

  175 statement: expression_statement .

    $default  reduce using rule 175 (statement)


State 131

  176 statement: selection_statement .

    $default  reduce using rule 176 (statement)


State 132

  177 statement: iteration_statement .

    $default  reduce using rule 177 (statement)


State 133

  178 statement: jump_statement .

    $default  reduce using rule 178 (statement)


State 134

    3 primary_exp: IDENTIFIER .

    $default  reduce using rule 3 (primary_exp)


State 135

  162 initializer: '{' . initializer_list '}'
  163            | '{' . initializer_list ',' '}'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '['             shift, and go to state 221
    '.'             shift, and go to state 222
    '{'             shift, and go to state 135
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 136
    initializer         go to state 223
    initializer_list    go to state 224
    designation         go to state 225
    designator_list     go to state 226
    designator          go to state 227


State 136

  161 initializer: assignment_exp .

    $default  reduce using rule 161 (initializer)


State 137

   94 init_declarator: declarator '=' initializer .

    $default  reduce using rule 94 (init_declarator)


State 138

  211 declaration_list: declaration_list declaration .

    $default  reduce using rule 211 (declaration_list)


State 139

  208 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 208 (function_definition)


State 140

  158 identifier_list: IDENTIFIER .

    $default  reduce using rule 158 (identifier_list)


State 141

  156 parameter_declaration: declaration_specifiers . declarator
  157                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 35
    '*'         shift, and go to state 36

    $default  reduce using rule 157 (parameter_declaration)

    declarator         go to state 228
    direct_declarator  go to state 41
    pointer            go to state 42


State 142

  138 direct_declarator: direct_declarator '(' parameter_type_list_opt . ')'

    ')'  shift, and go to state 229


State 143

  150 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 150 (parameter_type_list_opt)


State 144

  152 parameter_type_list: parameter_list .
  153                    | parameter_list . ',' ELLIPSIS
  155 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 230

    $default  reduce using rule 152 (parameter_type_list)


State 145

  154 parameter_list: parameter_declaration .

    $default  reduce using rule 154 (parameter_list)


State 146

  139 direct_declarator: direct_declarator '(' identifier_list . ')'
  159 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 231
    ','  shift, and go to state 232


State 147

  135 direct_declarator: direct_declarator '[' STATIC_ . type_qualifier_list_opt assignment_exp ']'

    CONST_       shift, and go to state 10
    RESTRICTED_  shift, and go to state 12
    VOLATILE_    shift, and go to state 18

    $default  reduce using rule 143 (type_qualifier_list_opt)

    type_qualifier           go to state 55
    type_qualifier_list_opt  go to state 233
    type_qualifier_list      go to state 234


State 148

  134 direct_declarator: direct_declarator '[' type_qualifier_list_opt . assignment_exp_opt ']'
  137                  | direct_declarator '[' type_qualifier_list_opt . '*' ']'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 235
    '!'             shift, and go to state 104

    $default  reduce using rule 141 (assignment_exp_opt)

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 236
    assignment_exp_opt  go to state 237


State 149

  136 direct_declarator: direct_declarator '[' type_qualifier_list . STATIC_ assignment_exp ']'
  142 type_qualifier_list_opt: type_qualifier_list .
  149 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_       shift, and go to state 10
    RESTRICTED_  shift, and go to state 12
    STATIC_      shift, and go to state 238
    VOLATILE_    shift, and go to state 18

    $default  reduce using rule 142 (type_qualifier_list_opt)

    type_qualifier  go to state 74


State 150

  117 enum_specifier: ENUM_ IDENTIFIER '{' enumerator_list '}' .

    $default  reduce using rule 117 (enum_specifier)


State 151

  119 enum_specifier: ENUM_ IDENTIFIER '{' enumerator_list ',' . '}'
  122 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 50
    '}'         shift, and go to state 239

    enumerator            go to state 153
    enumeration_constant  go to state 53


State 152

  118 enum_specifier: ENUM_ '{' enumerator_list ',' '}' .

    $default  reduce using rule 118 (enum_specifier)


State 153

  122 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 122 (enumerator_list)


State 154

   33 cast_exp: unary_exp .

    $default  reduce using rule 33 (cast_exp)


State 155

   80 constant_exp: conditional_exp .

    $default  reduce using rule 80 (constant_exp)


State 156

  124 enumerator: enumeration_constant '=' constant_exp .

    $default  reduce using rule 124 (enumerator)


State 157

    8 primary_exp: '(' . exp ')'
   16 postfix_exp: '(' . type_name ')' '{' initializer_list '}'
   17            | '(' . type_name ')' '{' initializer_list ',' '}'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DOUBLE_         shift, and go to state 1
    BOOL_           shift, and go to state 2
    SIGNED_         shift, and go to state 3
    SHORT_          shift, and go to state 5
    ENUM_           shift, and go to state 8
    CHAR_           shift, and go to state 9
    CONST_          shift, and go to state 10
    RESTRICTED_     shift, and go to state 12
    SIZEOF_         shift, and go to state 90
    FLOAT_          shift, and go to state 13
    LONG_           shift, and go to state 14
    IMAGINARY_      shift, and go to state 15
    UNSIGNED_       shift, and go to state 17
    VOLATILE_       shift, and go to state 18
    COMPLEX_        shift, and go to state 19
    VOID_           shift, and go to state 20
    INT_            shift, and go to state 21
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp               go to state 106
    postfix_exp               go to state 107
    unary_exp                 go to state 108
    unary_op                  go to state 109
    cast_exp                  go to state 110
    multiplicative_exp        go to state 111
    additive_exp              go to state 112
    shift_exp                 go to state 113
    relational_exp            go to state 114
    equality_exp              go to state 115
    and_exp                   go to state 116
    exclusive_or_exp          go to state 117
    inclusive_or_exp          go to state 118
    logical_and_exp           go to state 119
    logical_or_exp            go to state 120
    conditional_exp           go to state 121
    assignment_exp            go to state 122
    exp                       go to state 175
    type_specifier            go to state 176
    specifier_qualifier_list  go to state 177
    enum_specifier            go to state 26
    type_qualifier            go to state 178
    type_name                 go to state 240


State 158

   21 unary_exp: DECREMENT_OP unary_exp .

    $default  reduce using rule 21 (unary_exp)


State 159

   23 unary_exp: INCREMENT_OP unary_exp .

    $default  reduce using rule 23 (unary_exp)


State 160

  181 labeled_statement: DEFAULT_ ':' . statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    CONTINUE_       shift, and go to state 82
    SWITCH_         shift, and go to state 83
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    DO_             shift, and go to state 87
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FOR_            shift, and go to state 91
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp           go to state 106
    postfix_exp           go to state 107
    unary_exp             go to state 108
    unary_op              go to state 109
    cast_exp              go to state 110
    multiplicative_exp    go to state 111
    additive_exp          go to state 112
    shift_exp             go to state 113
    relational_exp        go to state 114
    equality_exp          go to state 115
    and_exp               go to state 116
    exclusive_or_exp      go to state 117
    inclusive_or_exp      go to state 118
    logical_and_exp       go to state 119
    logical_or_exp        go to state 120
    conditional_exp       go to state 121
    assignment_exp        go to state 122
    exp                   go to state 123
    statement             go to state 241
    labeled_statement     go to state 126
    compound_statement    go to state 127
    expression_statement  go to state 130
    selection_statement   go to state 131
    iteration_statement   go to state 132
    jump_statement        go to state 133


State 161

  201 jump_statement: BREAK_ ';' .

    $default  reduce using rule 201 (jump_statement)


State 162

  200 jump_statement: CONTINUE_ ';' .

    $default  reduce using rule 200 (jump_statement)


State 163

  192 selection_statement: SWITCH_ '(' . exp ')' statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 242


State 164

  202 jump_statement: RETURN_ ';' .

    $default  reduce using rule 202 (jump_statement)


State 165

   79 exp: exp . ',' assignment_exp
  203 jump_statement: RETURN_ exp . ';'

    ','  shift, and go to state 217
    ';'  shift, and go to state 243


State 166

  193 iteration_statement: WHILE_ M . '(' exp N ')' M statement

    '('  shift, and go to state 244


State 167

  199 jump_statement: GOTO_ IDENTIFIER . ';'

    ';'  shift, and go to state 245


State 168

  194 iteration_statement: DO_ M . statement M WHILE_ '(' exp ')' ';'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    CONTINUE_       shift, and go to state 82
    SWITCH_         shift, and go to state 83
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    DO_             shift, and go to state 87
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FOR_            shift, and go to state 91
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp           go to state 106
    postfix_exp           go to state 107
    unary_exp             go to state 108
    unary_op              go to state 109
    cast_exp              go to state 110
    multiplicative_exp    go to state 111
    additive_exp          go to state 112
    shift_exp             go to state 113
    relational_exp        go to state 114
    equality_exp          go to state 115
    and_exp               go to state 116
    exclusive_or_exp      go to state 117
    inclusive_or_exp      go to state 118
    logical_and_exp       go to state 119
    logical_or_exp        go to state 120
    conditional_exp       go to state 121
    assignment_exp        go to state 122
    exp                   go to state 123
    statement             go to state 246
    labeled_statement     go to state 126
    compound_statement    go to state 127
    expression_statement  go to state 130
    selection_statement   go to state 131
    iteration_statement   go to state 132
    jump_statement        go to state 133


State 169

  180 labeled_statement: CASE_ constant_exp . ':' statement

    ':'  shift, and go to state 247


State 170

  190 selection_statement: IF_ '(' . exp N ')' M statement N
  191                    | IF_ '(' . exp N ')' M statement N ELSE_ M statement N

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 248


State 171

    8 primary_exp: '(' . exp ')'
   16 postfix_exp: '(' . type_name ')' '{' initializer_list '}'
   17            | '(' . type_name ')' '{' initializer_list ',' '}'
   26 unary_exp: SIZEOF_ '(' . type_name ')'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DOUBLE_         shift, and go to state 1
    BOOL_           shift, and go to state 2
    SIGNED_         shift, and go to state 3
    SHORT_          shift, and go to state 5
    ENUM_           shift, and go to state 8
    CHAR_           shift, and go to state 9
    CONST_          shift, and go to state 10
    RESTRICTED_     shift, and go to state 12
    SIZEOF_         shift, and go to state 90
    FLOAT_          shift, and go to state 13
    LONG_           shift, and go to state 14
    IMAGINARY_      shift, and go to state 15
    UNSIGNED_       shift, and go to state 17
    VOLATILE_       shift, and go to state 18
    COMPLEX_        shift, and go to state 19
    VOID_           shift, and go to state 20
    INT_            shift, and go to state 21
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp               go to state 106
    postfix_exp               go to state 107
    unary_exp                 go to state 108
    unary_op                  go to state 109
    cast_exp                  go to state 110
    multiplicative_exp        go to state 111
    additive_exp              go to state 112
    shift_exp                 go to state 113
    relational_exp            go to state 114
    equality_exp              go to state 115
    and_exp                   go to state 116
    exclusive_or_exp          go to state 117
    inclusive_or_exp          go to state 118
    logical_and_exp           go to state 119
    logical_or_exp            go to state 120
    conditional_exp           go to state 121
    assignment_exp            go to state 122
    exp                       go to state 175
    type_specifier            go to state 176
    specifier_qualifier_list  go to state 177
    enum_specifier            go to state 26
    type_qualifier            go to state 178
    type_name                 go to state 249


State 172

   25 unary_exp: SIZEOF_ unary_exp .

    $default  reduce using rule 25 (unary_exp)


State 173

  195 iteration_statement: FOR_ '(' . expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement
  196                    | FOR_ '(' . declaration expression_opt ';' expression_opt ')' statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DOUBLE_         shift, and go to state 1
    BOOL_           shift, and go to state 2
    SIGNED_         shift, and go to state 3
    EXTERN_         shift, and go to state 4
    SHORT_          shift, and go to state 5
    AUTO_           shift, and go to state 6
    INLINE_         shift, and go to state 7
    ENUM_           shift, and go to state 8
    CHAR_           shift, and go to state 9
    CONST_          shift, and go to state 10
    REGISTER_       shift, and go to state 11
    RESTRICTED_     shift, and go to state 12
    SIZEOF_         shift, and go to state 90
    FLOAT_          shift, and go to state 13
    LONG_           shift, and go to state 14
    IMAGINARY_      shift, and go to state 15
    STATIC_         shift, and go to state 16
    UNSIGNED_       shift, and go to state 17
    VOLATILE_       shift, and go to state 18
    COMPLEX_        shift, and go to state 19
    VOID_           shift, and go to state 20
    INT_            shift, and go to state 21
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    $default  reduce using rule 198 (expression_opt)

    primary_exp              go to state 106
    postfix_exp              go to state 107
    unary_exp                go to state 108
    unary_op                 go to state 109
    cast_exp                 go to state 110
    multiplicative_exp       go to state 111
    additive_exp             go to state 112
    shift_exp                go to state 113
    relational_exp           go to state 114
    equality_exp             go to state 115
    and_exp                  go to state 116
    exclusive_or_exp         go to state 117
    inclusive_or_exp         go to state 118
    logical_and_exp          go to state 119
    logical_or_exp           go to state 120
    conditional_exp          go to state 121
    assignment_exp           go to state 122
    exp                      go to state 250
    declaration              go to state 251
    declaration_specifiers   go to state 63
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    expression_opt           go to state 252


State 174

  179 labeled_statement: IDENTIFIER ':' . statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    CONTINUE_       shift, and go to state 82
    SWITCH_         shift, and go to state 83
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    DO_             shift, and go to state 87
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FOR_            shift, and go to state 91
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp           go to state 106
    postfix_exp           go to state 107
    unary_exp             go to state 108
    unary_op              go to state 109
    cast_exp              go to state 110
    multiplicative_exp    go to state 111
    additive_exp          go to state 112
    shift_exp             go to state 113
    relational_exp        go to state 114
    equality_exp          go to state 115
    and_exp               go to state 116
    exclusive_or_exp      go to state 117
    inclusive_or_exp      go to state 118
    logical_and_exp       go to state 119
    logical_or_exp        go to state 120
    conditional_exp       go to state 121
    assignment_exp        go to state 122
    exp                   go to state 123
    statement             go to state 253
    labeled_statement     go to state 126
    compound_statement    go to state 127
    expression_statement  go to state 130
    selection_statement   go to state 131
    iteration_statement   go to state 132
    jump_statement        go to state 133


State 175

    8 primary_exp: '(' exp . ')'
   79 exp: exp . ',' assignment_exp

    ')'  shift, and go to state 254
    ','  shift, and go to state 217


State 176

  112 specifier_qualifier_list: type_specifier .
  113                         | type_specifier . specifier_qualifier_list

    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    SHORT_       shift, and go to state 5
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21

    $default  reduce using rule 112 (specifier_qualifier_list)

    type_specifier            go to state 176
    specifier_qualifier_list  go to state 255
    enum_specifier            go to state 26
    type_qualifier            go to state 178


State 177

  160 type_name: specifier_qualifier_list .

    $default  reduce using rule 160 (type_name)


State 178

  114 specifier_qualifier_list: type_qualifier .
  115                         | type_qualifier . specifier_qualifier_list

    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    SHORT_       shift, and go to state 5
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21

    $default  reduce using rule 114 (specifier_qualifier_list)

    type_specifier            go to state 176
    specifier_qualifier_list  go to state 256
    enum_specifier            go to state 26
    type_qualifier            go to state 178


State 179

   16 postfix_exp: '(' type_name . ')' '{' initializer_list '}'
   17            | '(' type_name . ')' '{' initializer_list ',' '}'
   34 cast_exp: '(' type_name . ')' cast_exp

    ')'  shift, and go to state 257


State 180

   18 postfix_exp: postfix_exp DECREMENT_OP .

    $default  reduce using rule 18 (postfix_exp)


State 181

   11 postfix_exp: postfix_exp POINTER_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 258


State 182

   12 postfix_exp: postfix_exp INCREMENT_OP .

    $default  reduce using rule 12 (postfix_exp)


State 183

   10 postfix_exp: postfix_exp '(' . ')'
   13            | postfix_exp '(' . argument_exp_list ')'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    ')'             shift, and go to state 259
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    argument_exp_list   go to state 260
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 261


State 184

   14 postfix_exp: postfix_exp '[' . exp ']'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 262


State 185

   15 postfix_exp: postfix_exp '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 263


State 186

   69 assignment_op: DIV_ASSIGN .

    $default  reduce using rule 69 (assignment_op)


State 187

   75 assignment_op: AND_ASSIGN .

    $default  reduce using rule 75 (assignment_op)


State 188

   72 assignment_op: SUB_ASSIGN .

    $default  reduce using rule 72 (assignment_op)


State 189

   68 assignment_op: MUL_ASSIGN .

    $default  reduce using rule 68 (assignment_op)


State 190

   73 assignment_op: LEFT_ASSIGN .

    $default  reduce using rule 73 (assignment_op)


State 191

   74 assignment_op: RIGHT_ASSIGN .

    $default  reduce using rule 74 (assignment_op)


State 192

   76 assignment_op: XOR_ASSIGN .

    $default  reduce using rule 76 (assignment_op)


State 193

   77 assignment_op: OR_ASSIGN .

    $default  reduce using rule 77 (assignment_op)


State 194

   70 assignment_op: MOD_ASSIGN .

    $default  reduce using rule 70 (assignment_op)


State 195

   71 assignment_op: ADD_ASSIGN .

    $default  reduce using rule 71 (assignment_op)


State 196

   67 assignment_op: '=' .

    $default  reduce using rule 67 (assignment_op)


State 197

   66 assignment_exp: unary_exp assignment_op . assignment_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 264


State 198

   24 unary_exp: unary_op cast_exp .

    $default  reduce using rule 24 (unary_exp)


State 199

   37 multiplicative_exp: multiplicative_exp '*' . cast_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp  go to state 106
    postfix_exp  go to state 107
    unary_exp    go to state 154
    unary_op     go to state 109
    cast_exp     go to state 265


State 200

   36 multiplicative_exp: multiplicative_exp '/' . cast_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp  go to state 106
    postfix_exp  go to state 107
    unary_exp    go to state 154
    unary_op     go to state 109
    cast_exp     go to state 266


State 201

   38 multiplicative_exp: multiplicative_exp '%' . cast_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp  go to state 106
    postfix_exp  go to state 107
    unary_exp    go to state 154
    unary_op     go to state 109
    cast_exp     go to state 267


State 202

   41 additive_exp: additive_exp '+' . multiplicative_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 268


State 203

   40 additive_exp: additive_exp '-' . multiplicative_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 269


State 204

   43 shift_exp: shift_exp LEFT_SHIFT . additive_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 270


State 205

   44 shift_exp: shift_exp RIGHT_SHIFT . additive_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 271


State 206

   49 relational_exp: relational_exp GREATER_EQ_OP . shift_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 272


State 207

   48 relational_exp: relational_exp LESS_EQ_OP . shift_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 273


State 208

   46 relational_exp: relational_exp '<' . shift_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 274


State 209

   47 relational_exp: relational_exp '>' . shift_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 275


State 210

   51 equality_exp: equality_exp EQ_OP . relational_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 276


State 211

   52 equality_exp: equality_exp NOT_EQ_OP . relational_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 277


State 212

   54 and_exp: and_exp '&' . equality_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 278


State 213

   56 exclusive_or_exp: exclusive_or_exp '^' . and_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 279


State 214

   58 inclusive_or_exp: inclusive_or_exp '|' . exclusive_or_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 280


State 215

   60 logical_and_exp: logical_and_exp N . AND_OP M inclusive_or_exp N

    AND_OP  shift, and go to state 281


State 216

   62 logical_or_exp: logical_or_exp N . OR_OP M logical_and_exp N
   64 conditional_exp: logical_or_exp N . '?' M exp N ':' M conditional_exp

    OR_OP  shift, and go to state 282
    '?'    shift, and go to state 283


State 217

   79 exp: exp ',' . assignment_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 284


State 218

  189 expression_statement: exp ';' .

    $default  reduce using rule 189 (expression_statement)


State 219

  183 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 183 (compound_statement)


State 220

  185 block_item_list: block_item_list M . block_item

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DOUBLE_         shift, and go to state 1
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    BOOL_           shift, and go to state 2
    SIGNED_         shift, and go to state 3
    EXTERN_         shift, and go to state 4
    CONTINUE_       shift, and go to state 82
    SHORT_          shift, and go to state 5
    SWITCH_         shift, and go to state 83
    AUTO_           shift, and go to state 6
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    INLINE_         shift, and go to state 7
    ENUM_           shift, and go to state 8
    CHAR_           shift, and go to state 9
    CONST_          shift, and go to state 10
    DO_             shift, and go to state 87
    REGISTER_       shift, and go to state 11
    RESTRICTED_     shift, and go to state 12
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FLOAT_          shift, and go to state 13
    LONG_           shift, and go to state 14
    IMAGINARY_      shift, and go to state 15
    STATIC_         shift, and go to state 16
    FOR_            shift, and go to state 91
    UNSIGNED_       shift, and go to state 17
    VOLATILE_       shift, and go to state 18
    COMPLEX_        shift, and go to state 19
    VOID_           shift, and go to state 20
    INT_            shift, and go to state 21
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp              go to state 106
    postfix_exp              go to state 107
    unary_exp                go to state 108
    unary_op                 go to state 109
    cast_exp                 go to state 110
    multiplicative_exp       go to state 111
    additive_exp             go to state 112
    shift_exp                go to state 113
    relational_exp           go to state 114
    equality_exp             go to state 115
    and_exp                  go to state 116
    exclusive_or_exp         go to state 117
    inclusive_or_exp         go to state 118
    logical_and_exp          go to state 119
    logical_or_exp           go to state 120
    conditional_exp          go to state 121
    assignment_exp           go to state 122
    exp                      go to state 123
    declaration              go to state 124
    declaration_specifiers   go to state 63
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    statement                go to state 125
    labeled_statement        go to state 126
    compound_statement       go to state 127
    block_item               go to state 285
    expression_statement     go to state 130
    selection_statement      go to state 131
    iteration_statement      go to state 132
    jump_statement           go to state 133


State 221

  171 designator: '[' . constant_exp ']'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 155
    constant_exp        go to state 286


State 222

  172 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 287


State 223

  164 initializer_list: initializer .

    $default  reduce using rule 164 (initializer_list)


State 224

  162 initializer: '{' initializer_list . '}'
  163            | '{' initializer_list . ',' '}'
  166 initializer_list: initializer_list . ',' initializer
  167                 | initializer_list . ',' designation initializer

    '}'  shift, and go to state 288
    ','  shift, and go to state 289


State 225

  165 initializer_list: designation . initializer

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 135
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 136
    initializer         go to state 290


State 226

  168 designation: designator_list . '='
  170 designator_list: designator_list . designator

    '['  shift, and go to state 221
    '.'  shift, and go to state 222
    '='  shift, and go to state 291

    designator  go to state 292


State 227

  169 designator_list: designator .

    $default  reduce using rule 169 (designator_list)


State 228

  156 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 156 (parameter_declaration)


State 229

  138 direct_declarator: direct_declarator '(' parameter_type_list_opt ')' .

    $default  reduce using rule 138 (direct_declarator)


State 230

  153 parameter_type_list: parameter_list ',' . ELLIPSIS
  155 parameter_list: parameter_list ',' . parameter_declaration

    ELLIPSIS     shift, and go to state 293
    DOUBLE_      shift, and go to state 1
    BOOL_        shift, and go to state 2
    SIGNED_      shift, and go to state 3
    EXTERN_      shift, and go to state 4
    SHORT_       shift, and go to state 5
    AUTO_        shift, and go to state 6
    INLINE_      shift, and go to state 7
    ENUM_        shift, and go to state 8
    CHAR_        shift, and go to state 9
    CONST_       shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICTED_  shift, and go to state 12
    FLOAT_       shift, and go to state 13
    LONG_        shift, and go to state 14
    IMAGINARY_   shift, and go to state 15
    STATIC_      shift, and go to state 16
    UNSIGNED_    shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    COMPLEX_     shift, and go to state 19
    VOID_        shift, and go to state 20
    INT_         shift, and go to state 21

    declaration_specifiers   go to state 141
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 294


State 231

  139 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 139 (direct_declarator)


State 232

  159 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 295


State 233

  135 direct_declarator: direct_declarator '[' STATIC_ type_qualifier_list_opt . assignment_exp ']'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 296


State 234

  142 type_qualifier_list_opt: type_qualifier_list .
  149 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_       shift, and go to state 10
    RESTRICTED_  shift, and go to state 12
    VOLATILE_    shift, and go to state 18

    $default  reduce using rule 142 (type_qualifier_list_opt)

    type_qualifier  go to state 74


State 235

   31 unary_op: '*' .
  137 direct_declarator: direct_declarator '[' type_qualifier_list_opt '*' . ']'

    ']'  shift, and go to state 297

    $default  reduce using rule 31 (unary_op)


State 236

  140 assignment_exp_opt: assignment_exp .

    $default  reduce using rule 140 (assignment_exp_opt)


State 237

  134 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_exp_opt . ']'

    ']'  shift, and go to state 298


State 238

  136 direct_declarator: direct_declarator '[' type_qualifier_list STATIC_ . assignment_exp ']'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 299


State 239

  119 enum_specifier: ENUM_ IDENTIFIER '{' enumerator_list ',' '}' .

    $default  reduce using rule 119 (enum_specifier)


State 240

   16 postfix_exp: '(' type_name . ')' '{' initializer_list '}'
   17            | '(' type_name . ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 300


State 241

  181 labeled_statement: DEFAULT_ ':' statement .

    $default  reduce using rule 181 (labeled_statement)


State 242

   79 exp: exp . ',' assignment_exp
  192 selection_statement: SWITCH_ '(' exp . ')' statement

    ')'  shift, and go to state 301
    ','  shift, and go to state 217


State 243

  203 jump_statement: RETURN_ exp ';' .

    $default  reduce using rule 203 (jump_statement)


State 244

  193 iteration_statement: WHILE_ M '(' . exp N ')' M statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 302


State 245

  199 jump_statement: GOTO_ IDENTIFIER ';' .

    $default  reduce using rule 199 (jump_statement)


State 246

  194 iteration_statement: DO_ M statement . M WHILE_ '(' exp ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 303


State 247

  180 labeled_statement: CASE_ constant_exp ':' . statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    CONTINUE_       shift, and go to state 82
    SWITCH_         shift, and go to state 83
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    DO_             shift, and go to state 87
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FOR_            shift, and go to state 91
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp           go to state 106
    postfix_exp           go to state 107
    unary_exp             go to state 108
    unary_op              go to state 109
    cast_exp              go to state 110
    multiplicative_exp    go to state 111
    additive_exp          go to state 112
    shift_exp             go to state 113
    relational_exp        go to state 114
    equality_exp          go to state 115
    and_exp               go to state 116
    exclusive_or_exp      go to state 117
    inclusive_or_exp      go to state 118
    logical_and_exp       go to state 119
    logical_or_exp        go to state 120
    conditional_exp       go to state 121
    assignment_exp        go to state 122
    exp                   go to state 123
    statement             go to state 304
    labeled_statement     go to state 126
    compound_statement    go to state 127
    expression_statement  go to state 130
    selection_statement   go to state 131
    iteration_statement   go to state 132
    jump_statement        go to state 133


State 248

   79 exp: exp . ',' assignment_exp
  190 selection_statement: IF_ '(' exp . N ')' M statement N
  191                    | IF_ '(' exp . N ')' M statement N ELSE_ M statement N

    ','  shift, and go to state 217

    $default  reduce using rule 2 (N)

    N  go to state 305


State 249

   16 postfix_exp: '(' type_name . ')' '{' initializer_list '}'
   17            | '(' type_name . ')' '{' initializer_list ',' '}'
   26 unary_exp: SIZEOF_ '(' type_name . ')'

    ')'  shift, and go to state 306


State 250

   79 exp: exp . ',' assignment_exp
  197 expression_opt: exp .

    ','  shift, and go to state 217

    $default  reduce using rule 197 (expression_opt)


State 251

  196 iteration_statement: FOR_ '(' declaration . expression_opt ';' expression_opt ')' statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    $default  reduce using rule 198 (expression_opt)

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 250
    expression_opt      go to state 307


State 252

  195 iteration_statement: FOR_ '(' expression_opt . ';' M expression_opt N ';' M expression_opt N ')' M statement

    ';'  shift, and go to state 308


State 253

  179 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 179 (labeled_statement)


State 254

    8 primary_exp: '(' exp ')' .

    $default  reduce using rule 8 (primary_exp)


State 255

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 113 (specifier_qualifier_list)


State 256

  115 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 115 (specifier_qualifier_list)


State 257

   16 postfix_exp: '(' type_name ')' . '{' initializer_list '}'
   17            | '(' type_name ')' . '{' initializer_list ',' '}'
   34 cast_exp: '(' type_name ')' . cast_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 309
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp  go to state 106
    postfix_exp  go to state 107
    unary_exp    go to state 154
    unary_op     go to state 109
    cast_exp     go to state 310


State 258

   11 postfix_exp: postfix_exp POINTER_OP IDENTIFIER .

    $default  reduce using rule 11 (postfix_exp)


State 259

   10 postfix_exp: postfix_exp '(' ')' .

    $default  reduce using rule 10 (postfix_exp)


State 260

   13 postfix_exp: postfix_exp '(' argument_exp_list . ')'
   20 argument_exp_list: argument_exp_list . ',' assignment_exp

    ')'  shift, and go to state 311
    ','  shift, and go to state 312


State 261

   19 argument_exp_list: assignment_exp .

    $default  reduce using rule 19 (argument_exp_list)


State 262

   14 postfix_exp: postfix_exp '[' exp . ']'
   79 exp: exp . ',' assignment_exp

    ']'  shift, and go to state 313
    ','  shift, and go to state 217


State 263

   15 postfix_exp: postfix_exp '.' IDENTIFIER .

    $default  reduce using rule 15 (postfix_exp)


State 264

   66 assignment_exp: unary_exp assignment_op assignment_exp .

    $default  reduce using rule 66 (assignment_exp)


State 265

   37 multiplicative_exp: multiplicative_exp '*' cast_exp .

    $default  reduce using rule 37 (multiplicative_exp)


State 266

   36 multiplicative_exp: multiplicative_exp '/' cast_exp .

    $default  reduce using rule 36 (multiplicative_exp)


State 267

   38 multiplicative_exp: multiplicative_exp '%' cast_exp .

    $default  reduce using rule 38 (multiplicative_exp)


State 268

   36 multiplicative_exp: multiplicative_exp . '/' cast_exp
   37                   | multiplicative_exp . '*' cast_exp
   38                   | multiplicative_exp . '%' cast_exp
   41 additive_exp: additive_exp '+' multiplicative_exp .

    '*'  shift, and go to state 199
    '/'  shift, and go to state 200
    '%'  shift, and go to state 201

    $default  reduce using rule 41 (additive_exp)


State 269

   36 multiplicative_exp: multiplicative_exp . '/' cast_exp
   37                   | multiplicative_exp . '*' cast_exp
   38                   | multiplicative_exp . '%' cast_exp
   40 additive_exp: additive_exp '-' multiplicative_exp .

    '*'  shift, and go to state 199
    '/'  shift, and go to state 200
    '%'  shift, and go to state 201

    $default  reduce using rule 40 (additive_exp)


State 270

   40 additive_exp: additive_exp . '-' multiplicative_exp
   41             | additive_exp . '+' multiplicative_exp
   43 shift_exp: shift_exp LEFT_SHIFT additive_exp .

    '+'  shift, and go to state 202
    '-'  shift, and go to state 203

    $default  reduce using rule 43 (shift_exp)


State 271

   40 additive_exp: additive_exp . '-' multiplicative_exp
   41             | additive_exp . '+' multiplicative_exp
   44 shift_exp: shift_exp RIGHT_SHIFT additive_exp .

    '+'  shift, and go to state 202
    '-'  shift, and go to state 203

    $default  reduce using rule 44 (shift_exp)


State 272

   43 shift_exp: shift_exp . LEFT_SHIFT additive_exp
   44          | shift_exp . RIGHT_SHIFT additive_exp
   49 relational_exp: relational_exp GREATER_EQ_OP shift_exp .

    LEFT_SHIFT   shift, and go to state 204
    RIGHT_SHIFT  shift, and go to state 205

    $default  reduce using rule 49 (relational_exp)


State 273

   43 shift_exp: shift_exp . LEFT_SHIFT additive_exp
   44          | shift_exp . RIGHT_SHIFT additive_exp
   48 relational_exp: relational_exp LESS_EQ_OP shift_exp .

    LEFT_SHIFT   shift, and go to state 204
    RIGHT_SHIFT  shift, and go to state 205

    $default  reduce using rule 48 (relational_exp)


State 274

   43 shift_exp: shift_exp . LEFT_SHIFT additive_exp
   44          | shift_exp . RIGHT_SHIFT additive_exp
   46 relational_exp: relational_exp '<' shift_exp .

    LEFT_SHIFT   shift, and go to state 204
    RIGHT_SHIFT  shift, and go to state 205

    $default  reduce using rule 46 (relational_exp)


State 275

   43 shift_exp: shift_exp . LEFT_SHIFT additive_exp
   44          | shift_exp . RIGHT_SHIFT additive_exp
   47 relational_exp: relational_exp '>' shift_exp .

    LEFT_SHIFT   shift, and go to state 204
    RIGHT_SHIFT  shift, and go to state 205

    $default  reduce using rule 47 (relational_exp)


State 276

   46 relational_exp: relational_exp . '<' shift_exp
   47               | relational_exp . '>' shift_exp
   48               | relational_exp . LESS_EQ_OP shift_exp
   49               | relational_exp . GREATER_EQ_OP shift_exp
   51 equality_exp: equality_exp EQ_OP relational_exp .

    GREATER_EQ_OP  shift, and go to state 206
    LESS_EQ_OP     shift, and go to state 207
    '<'            shift, and go to state 208
    '>'            shift, and go to state 209

    $default  reduce using rule 51 (equality_exp)


State 277

   46 relational_exp: relational_exp . '<' shift_exp
   47               | relational_exp . '>' shift_exp
   48               | relational_exp . LESS_EQ_OP shift_exp
   49               | relational_exp . GREATER_EQ_OP shift_exp
   52 equality_exp: equality_exp NOT_EQ_OP relational_exp .

    GREATER_EQ_OP  shift, and go to state 206
    LESS_EQ_OP     shift, and go to state 207
    '<'            shift, and go to state 208
    '>'            shift, and go to state 209

    $default  reduce using rule 52 (equality_exp)


State 278

   51 equality_exp: equality_exp . EQ_OP relational_exp
   52             | equality_exp . NOT_EQ_OP relational_exp
   54 and_exp: and_exp '&' equality_exp .

    EQ_OP      shift, and go to state 210
    NOT_EQ_OP  shift, and go to state 211

    $default  reduce using rule 54 (and_exp)


State 279

   54 and_exp: and_exp . '&' equality_exp
   56 exclusive_or_exp: exclusive_or_exp '^' and_exp .

    '&'  shift, and go to state 212

    $default  reduce using rule 56 (exclusive_or_exp)


State 280

   56 exclusive_or_exp: exclusive_or_exp . '^' and_exp
   58 inclusive_or_exp: inclusive_or_exp '|' exclusive_or_exp .

    '^'  shift, and go to state 213

    $default  reduce using rule 58 (inclusive_or_exp)


State 281

   60 logical_and_exp: logical_and_exp N AND_OP . M inclusive_or_exp N

    $default  reduce using rule 1 (M)

    M  go to state 314


State 282

   62 logical_or_exp: logical_or_exp N OR_OP . M logical_and_exp N

    $default  reduce using rule 1 (M)

    M  go to state 315


State 283

   64 conditional_exp: logical_or_exp N '?' . M exp N ':' M conditional_exp

    $default  reduce using rule 1 (M)

    M  go to state 316


State 284

   79 exp: exp ',' assignment_exp .

    $default  reduce using rule 79 (exp)


State 285

  185 block_item_list: block_item_list M block_item .

    $default  reduce using rule 185 (block_item_list)


State 286

  171 designator: '[' constant_exp . ']'

    ']'  shift, and go to state 317


State 287

  172 designator: '.' IDENTIFIER .

    $default  reduce using rule 172 (designator)


State 288

  162 initializer: '{' initializer_list '}' .

    $default  reduce using rule 162 (initializer)


State 289

  163 initializer: '{' initializer_list ',' . '}'
  166 initializer_list: initializer_list ',' . initializer
  167                 | initializer_list ',' . designation initializer

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '['             shift, and go to state 221
    '.'             shift, and go to state 222
    '{'             shift, and go to state 135
    '}'             shift, and go to state 318
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 136
    initializer         go to state 319
    designation         go to state 320
    designator_list     go to state 226
    designator          go to state 227


State 290

  165 initializer_list: designation initializer .

    $default  reduce using rule 165 (initializer_list)


State 291

  168 designation: designator_list '=' .

    $default  reduce using rule 168 (designation)


State 292

  170 designator_list: designator_list designator .

    $default  reduce using rule 170 (designator_list)


State 293

  153 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 153 (parameter_type_list)


State 294

  155 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 155 (parameter_list)


State 295

  159 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 159 (identifier_list)


State 296

  135 direct_declarator: direct_declarator '[' STATIC_ type_qualifier_list_opt assignment_exp . ']'

    ']'  shift, and go to state 321


State 297

  137 direct_declarator: direct_declarator '[' type_qualifier_list_opt '*' ']' .

    $default  reduce using rule 137 (direct_declarator)


State 298

  134 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_exp_opt ']' .

    $default  reduce using rule 134 (direct_declarator)


State 299

  136 direct_declarator: direct_declarator '[' type_qualifier_list STATIC_ assignment_exp . ']'

    ']'  shift, and go to state 322


State 300

   16 postfix_exp: '(' type_name ')' . '{' initializer_list '}'
   17            | '(' type_name ')' . '{' initializer_list ',' '}'

    '{'  shift, and go to state 309


State 301

  192 selection_statement: SWITCH_ '(' exp ')' . statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    CONTINUE_       shift, and go to state 82
    SWITCH_         shift, and go to state 83
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    DO_             shift, and go to state 87
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FOR_            shift, and go to state 91
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp           go to state 106
    postfix_exp           go to state 107
    unary_exp             go to state 108
    unary_op              go to state 109
    cast_exp              go to state 110
    multiplicative_exp    go to state 111
    additive_exp          go to state 112
    shift_exp             go to state 113
    relational_exp        go to state 114
    equality_exp          go to state 115
    and_exp               go to state 116
    exclusive_or_exp      go to state 117
    inclusive_or_exp      go to state 118
    logical_and_exp       go to state 119
    logical_or_exp        go to state 120
    conditional_exp       go to state 121
    assignment_exp        go to state 122
    exp                   go to state 123
    statement             go to state 323
    labeled_statement     go to state 126
    compound_statement    go to state 127
    expression_statement  go to state 130
    selection_statement   go to state 131
    iteration_statement   go to state 132
    jump_statement        go to state 133


State 302

   79 exp: exp . ',' assignment_exp
  193 iteration_statement: WHILE_ M '(' exp . N ')' M statement

    ','  shift, and go to state 217

    $default  reduce using rule 2 (N)

    N  go to state 324


State 303

  194 iteration_statement: DO_ M statement M . WHILE_ '(' exp ')' ';'

    WHILE_  shift, and go to state 325


State 304

  180 labeled_statement: CASE_ constant_exp ':' statement .

    $default  reduce using rule 180 (labeled_statement)


State 305

  190 selection_statement: IF_ '(' exp N . ')' M statement N
  191                    | IF_ '(' exp N . ')' M statement N ELSE_ M statement N

    ')'  shift, and go to state 326


State 306

   16 postfix_exp: '(' type_name ')' . '{' initializer_list '}'
   17            | '(' type_name ')' . '{' initializer_list ',' '}'
   26 unary_exp: SIZEOF_ '(' type_name ')' .

    '{'  shift, and go to state 309

    $default  reduce using rule 26 (unary_exp)


State 307

  196 iteration_statement: FOR_ '(' declaration expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 327


State 308

  195 iteration_statement: FOR_ '(' expression_opt ';' . M expression_opt N ';' M expression_opt N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 328


State 309

   16 postfix_exp: '(' type_name ')' '{' . initializer_list '}'
   17            | '(' type_name ')' '{' . initializer_list ',' '}'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '['             shift, and go to state 221
    '.'             shift, and go to state 222
    '{'             shift, and go to state 135
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 136
    initializer         go to state 223
    initializer_list    go to state 329
    designation         go to state 225
    designator_list     go to state 226
    designator          go to state 227


State 310

   34 cast_exp: '(' type_name ')' cast_exp .

    $default  reduce using rule 34 (cast_exp)


State 311

   13 postfix_exp: postfix_exp '(' argument_exp_list ')' .

    $default  reduce using rule 13 (postfix_exp)


State 312

   20 argument_exp_list: argument_exp_list ',' . assignment_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 330


State 313

   14 postfix_exp: postfix_exp '[' exp ']' .

    $default  reduce using rule 14 (postfix_exp)


State 314

   60 logical_and_exp: logical_and_exp N AND_OP M . inclusive_or_exp N

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 331


State 315

   62 logical_or_exp: logical_or_exp N OR_OP M . logical_and_exp N

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 332


State 316

   64 conditional_exp: logical_or_exp N '?' M . exp N ':' M conditional_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 333


State 317

  171 designator: '[' constant_exp ']' .

    $default  reduce using rule 171 (designator)


State 318

  163 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 163 (initializer)


State 319

  166 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 166 (initializer_list)


State 320

  167 initializer_list: initializer_list ',' designation . initializer

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 135
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 136
    initializer         go to state 334


State 321

  135 direct_declarator: direct_declarator '[' STATIC_ type_qualifier_list_opt assignment_exp ']' .

    $default  reduce using rule 135 (direct_declarator)


State 322

  136 direct_declarator: direct_declarator '[' type_qualifier_list STATIC_ assignment_exp ']' .

    $default  reduce using rule 136 (direct_declarator)


State 323

  192 selection_statement: SWITCH_ '(' exp ')' statement .

    $default  reduce using rule 192 (selection_statement)


State 324

  193 iteration_statement: WHILE_ M '(' exp N . ')' M statement

    ')'  shift, and go to state 335


State 325

  194 iteration_statement: DO_ M statement M WHILE_ . '(' exp ')' ';'

    '('  shift, and go to state 336


State 326

  190 selection_statement: IF_ '(' exp N ')' . M statement N
  191                    | IF_ '(' exp N ')' . M statement N ELSE_ M statement N

    $default  reduce using rule 1 (M)

    M  go to state 337


State 327

  196 iteration_statement: FOR_ '(' declaration expression_opt ';' . expression_opt ')' statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    $default  reduce using rule 198 (expression_opt)

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 250
    expression_opt      go to state 338


State 328

  195 iteration_statement: FOR_ '(' expression_opt ';' M . expression_opt N ';' M expression_opt N ')' M statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    $default  reduce using rule 198 (expression_opt)

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 250
    expression_opt      go to state 339


State 329

   16 postfix_exp: '(' type_name ')' '{' initializer_list . '}'
   17            | '(' type_name ')' '{' initializer_list . ',' '}'
  166 initializer_list: initializer_list . ',' initializer
  167                 | initializer_list . ',' designation initializer

    '}'  shift, and go to state 340
    ','  shift, and go to state 341


State 330

   20 argument_exp_list: argument_exp_list ',' assignment_exp .

    $default  reduce using rule 20 (argument_exp_list)


State 331

   58 inclusive_or_exp: inclusive_or_exp . '|' exclusive_or_exp
   60 logical_and_exp: logical_and_exp N AND_OP M inclusive_or_exp . N

    '|'  shift, and go to state 214

    $default  reduce using rule 2 (N)

    N  go to state 342


State 332

   60 logical_and_exp: logical_and_exp . N AND_OP M inclusive_or_exp N
   62 logical_or_exp: logical_or_exp N OR_OP M logical_and_exp . N

    $default  reduce using rule 2 (N)

    N  go to state 343


State 333

   64 conditional_exp: logical_or_exp N '?' M exp . N ':' M conditional_exp
   79 exp: exp . ',' assignment_exp

    ','  shift, and go to state 217

    $default  reduce using rule 2 (N)

    N  go to state 344


State 334

  167 initializer_list: initializer_list ',' designation initializer .

    $default  reduce using rule 167 (initializer_list)


State 335

  193 iteration_statement: WHILE_ M '(' exp N ')' . M statement

    $default  reduce using rule 1 (M)

    M  go to state 345


State 336

  194 iteration_statement: DO_ M statement M WHILE_ '(' . exp ')' ';'

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 346


State 337

  190 selection_statement: IF_ '(' exp N ')' M . statement N
  191                    | IF_ '(' exp N ')' M . statement N ELSE_ M statement N

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    CONTINUE_       shift, and go to state 82
    SWITCH_         shift, and go to state 83
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    DO_             shift, and go to state 87
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FOR_            shift, and go to state 91
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp           go to state 106
    postfix_exp           go to state 107
    unary_exp             go to state 108
    unary_op              go to state 109
    cast_exp              go to state 110
    multiplicative_exp    go to state 111
    additive_exp          go to state 112
    shift_exp             go to state 113
    relational_exp        go to state 114
    equality_exp          go to state 115
    and_exp               go to state 116
    exclusive_or_exp      go to state 117
    inclusive_or_exp      go to state 118
    logical_and_exp       go to state 119
    logical_or_exp        go to state 120
    conditional_exp       go to state 121
    assignment_exp        go to state 122
    exp                   go to state 123
    statement             go to state 347
    labeled_statement     go to state 126
    compound_statement    go to state 127
    expression_statement  go to state 130
    selection_statement   go to state 131
    iteration_statement   go to state 132
    jump_statement        go to state 133


State 338

  196 iteration_statement: FOR_ '(' declaration expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 348


State 339

  195 iteration_statement: FOR_ '(' expression_opt ';' M expression_opt . N ';' M expression_opt N ')' M statement

    $default  reduce using rule 2 (N)

    N  go to state 349


State 340

   16 postfix_exp: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 16 (postfix_exp)


State 341

   17 postfix_exp: '(' type_name ')' '{' initializer_list ',' . '}'
  166 initializer_list: initializer_list ',' . initializer
  167                 | initializer_list ',' . designation initializer

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '['             shift, and go to state 221
    '.'             shift, and go to state 222
    '{'             shift, and go to state 135
    '}'             shift, and go to state 350
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 136
    initializer         go to state 319
    designation         go to state 320
    designator_list     go to state 226
    designator          go to state 227


State 342

   60 logical_and_exp: logical_and_exp N AND_OP M inclusive_or_exp N .

    $default  reduce using rule 60 (logical_and_exp)


State 343

   60 logical_and_exp: logical_and_exp N . AND_OP M inclusive_or_exp N
   62 logical_or_exp: logical_or_exp N OR_OP M logical_and_exp N .

    AND_OP  shift, and go to state 281

    $default  reduce using rule 62 (logical_or_exp)


State 344

   64 conditional_exp: logical_or_exp N '?' M exp N . ':' M conditional_exp

    ':'  shift, and go to state 351


State 345

  193 iteration_statement: WHILE_ M '(' exp N ')' M . statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    CONTINUE_       shift, and go to state 82
    SWITCH_         shift, and go to state 83
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    DO_             shift, and go to state 87
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FOR_            shift, and go to state 91
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp           go to state 106
    postfix_exp           go to state 107
    unary_exp             go to state 108
    unary_op              go to state 109
    cast_exp              go to state 110
    multiplicative_exp    go to state 111
    additive_exp          go to state 112
    shift_exp             go to state 113
    relational_exp        go to state 114
    equality_exp          go to state 115
    and_exp               go to state 116
    exclusive_or_exp      go to state 117
    inclusive_or_exp      go to state 118
    logical_and_exp       go to state 119
    logical_or_exp        go to state 120
    conditional_exp       go to state 121
    assignment_exp        go to state 122
    exp                   go to state 123
    statement             go to state 352
    labeled_statement     go to state 126
    compound_statement    go to state 127
    expression_statement  go to state 130
    selection_statement   go to state 131
    iteration_statement   go to state 132
    jump_statement        go to state 133


State 346

   79 exp: exp . ',' assignment_exp
  194 iteration_statement: DO_ M statement M WHILE_ '(' exp . ')' ';'

    ')'  shift, and go to state 353
    ','  shift, and go to state 217


State 347

  190 selection_statement: IF_ '(' exp N ')' M statement . N
  191                    | IF_ '(' exp N ')' M statement . N ELSE_ M statement N

    $default  reduce using rule 2 (N)

    N  go to state 354


State 348

  196 iteration_statement: FOR_ '(' declaration expression_opt ';' expression_opt ')' . statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    CONTINUE_       shift, and go to state 82
    SWITCH_         shift, and go to state 83
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    DO_             shift, and go to state 87
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FOR_            shift, and go to state 91
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp           go to state 106
    postfix_exp           go to state 107
    unary_exp             go to state 108
    unary_op              go to state 109
    cast_exp              go to state 110
    multiplicative_exp    go to state 111
    additive_exp          go to state 112
    shift_exp             go to state 113
    relational_exp        go to state 114
    equality_exp          go to state 115
    and_exp               go to state 116
    exclusive_or_exp      go to state 117
    inclusive_or_exp      go to state 118
    logical_and_exp       go to state 119
    logical_or_exp        go to state 120
    conditional_exp       go to state 121
    assignment_exp        go to state 122
    exp                   go to state 123
    statement             go to state 355
    labeled_statement     go to state 126
    compound_statement    go to state 127
    expression_statement  go to state 130
    selection_statement   go to state 131
    iteration_statement   go to state 132
    jump_statement        go to state 133


State 349

  195 iteration_statement: FOR_ '(' expression_opt ';' M expression_opt N . ';' M expression_opt N ')' M statement

    ';'  shift, and go to state 356


State 350

   17 postfix_exp: '(' type_name ')' '{' initializer_list ',' '}' .

    $default  reduce using rule 17 (postfix_exp)


State 351

   64 conditional_exp: logical_or_exp N '?' M exp N ':' . M conditional_exp

    $default  reduce using rule 1 (M)

    M  go to state 357


State 352

  193 iteration_statement: WHILE_ M '(' exp N ')' M statement .

    $default  reduce using rule 193 (iteration_statement)


State 353

  194 iteration_statement: DO_ M statement M WHILE_ '(' exp ')' . ';'

    ';'  shift, and go to state 358


State 354

  190 selection_statement: IF_ '(' exp N ')' M statement N .
  191                    | IF_ '(' exp N ')' M statement N . ELSE_ M statement N

    ELSE_  shift, and go to state 359

    ELSE_     [reduce using rule 190 (selection_statement)]
    $default  reduce using rule 190 (selection_statement)


State 355

  196 iteration_statement: FOR_ '(' declaration expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 196 (iteration_statement)


State 356

  195 iteration_statement: FOR_ '(' expression_opt ';' M expression_opt N ';' . M expression_opt N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 360


State 357

   64 conditional_exp: logical_or_exp N '?' M exp N ':' M . conditional_exp

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 154
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 361


State 358

  194 iteration_statement: DO_ M statement M WHILE_ '(' exp ')' ';' .

    $default  reduce using rule 194 (iteration_statement)


State 359

  191 selection_statement: IF_ '(' exp N ')' M statement N ELSE_ . M statement N

    $default  reduce using rule 1 (M)

    M  go to state 362


State 360

  195 iteration_statement: FOR_ '(' expression_opt ';' M expression_opt N ';' M . expression_opt N ')' M statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    SIZEOF_         shift, and go to state 90
    IDENTIFIER      shift, and go to state 134
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104

    $default  reduce using rule 198 (expression_opt)

    primary_exp         go to state 106
    postfix_exp         go to state 107
    unary_exp           go to state 108
    unary_op            go to state 109
    cast_exp            go to state 110
    multiplicative_exp  go to state 111
    additive_exp        go to state 112
    shift_exp           go to state 113
    relational_exp      go to state 114
    equality_exp        go to state 115
    and_exp             go to state 116
    exclusive_or_exp    go to state 117
    inclusive_or_exp    go to state 118
    logical_and_exp     go to state 119
    logical_or_exp      go to state 120
    conditional_exp     go to state 121
    assignment_exp      go to state 122
    exp                 go to state 250
    expression_opt      go to state 363


State 361

   64 conditional_exp: logical_or_exp N '?' M exp N ':' M conditional_exp .

    $default  reduce using rule 64 (conditional_exp)


State 362

  191 selection_statement: IF_ '(' exp N ')' M statement N ELSE_ M . statement N

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    CONTINUE_       shift, and go to state 82
    SWITCH_         shift, and go to state 83
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    DO_             shift, and go to state 87
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FOR_            shift, and go to state 91
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp           go to state 106
    postfix_exp           go to state 107
    unary_exp             go to state 108
    unary_op              go to state 109
    cast_exp              go to state 110
    multiplicative_exp    go to state 111
    additive_exp          go to state 112
    shift_exp             go to state 113
    relational_exp        go to state 114
    equality_exp          go to state 115
    and_exp               go to state 116
    exclusive_or_exp      go to state 117
    inclusive_or_exp      go to state 118
    logical_and_exp       go to state 119
    logical_or_exp        go to state 120
    conditional_exp       go to state 121
    assignment_exp        go to state 122
    exp                   go to state 123
    statement             go to state 364
    labeled_statement     go to state 126
    compound_statement    go to state 127
    expression_statement  go to state 130
    selection_statement   go to state 131
    iteration_statement   go to state 132
    jump_statement        go to state 133


State 363

  195 iteration_statement: FOR_ '(' expression_opt ';' M expression_opt N ';' M expression_opt . N ')' M statement

    $default  reduce using rule 2 (N)

    N  go to state 365


State 364

  191 selection_statement: IF_ '(' exp N ')' M statement N ELSE_ M statement . N

    $default  reduce using rule 2 (N)

    N  go to state 366


State 365

  195 iteration_statement: FOR_ '(' expression_opt ';' M expression_opt N ';' M expression_opt N . ')' M statement

    ')'  shift, and go to state 367


State 366

  191 selection_statement: IF_ '(' exp N ')' M statement N ELSE_ M statement N .

    $default  reduce using rule 191 (selection_statement)


State 367

  195 iteration_statement: FOR_ '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' . M statement

    $default  reduce using rule 1 (M)

    M  go to state 368


State 368

  195 iteration_statement: FOR_ '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M . statement

    DECREMENT_OP    shift, and go to state 78
    INCREMENT_OP    shift, and go to state 79
    DEFAULT_        shift, and go to state 80
    BREAK_          shift, and go to state 81
    CONTINUE_       shift, and go to state 82
    SWITCH_         shift, and go to state 83
    RETURN_         shift, and go to state 84
    WHILE_          shift, and go to state 85
    GOTO_           shift, and go to state 86
    DO_             shift, and go to state 87
    CASE_           shift, and go to state 88
    IF_             shift, and go to state 89
    SIZEOF_         shift, and go to state 90
    FOR_            shift, and go to state 91
    IDENTIFIER      shift, and go to state 92
    STRING_LITERAL  shift, and go to state 93
    INT_CONSTANT    shift, and go to state 94
    FLOAT_CONSTANT  shift, and go to state 95
    CHAR_CONSTANT   shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 60
    '&'             shift, and go to state 99
    '+'             shift, and go to state 100
    '-'             shift, and go to state 101
    '~'             shift, and go to state 102
    '*'             shift, and go to state 103
    '!'             shift, and go to state 104
    ';'             shift, and go to state 105

    primary_exp           go to state 106
    postfix_exp           go to state 107
    unary_exp             go to state 108
    unary_op              go to state 109
    cast_exp              go to state 110
    multiplicative_exp    go to state 111
    additive_exp          go to state 112
    shift_exp             go to state 113
    relational_exp        go to state 114
    equality_exp          go to state 115
    and_exp               go to state 116
    exclusive_or_exp      go to state 117
    inclusive_or_exp      go to state 118
    logical_and_exp       go to state 119
    logical_or_exp        go to state 120
    conditional_exp       go to state 121
    assignment_exp        go to state 122
    exp                   go to state 123
    statement             go to state 369
    labeled_statement     go to state 126
    compound_statement    go to state 127
    expression_statement  go to state 130
    selection_statement   go to state 131
    iteration_statement   go to state 132
    jump_statement        go to state 133


State 369

  195 iteration_statement: FOR_ '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement .

    $default  reduce using rule 195 (iteration_statement)
