Terminals unused in grammar

   STRUCT
   TYPEDEF
   UNION
   SPACE
   HASH


State 22 conflicts: 21 shift/reduce
State 23 conflicts: 21 shift/reduce
State 24 conflicts: 21 shift/reduce
State 27 conflicts: 21 shift/reduce
State 32 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 63 conflicts: 3 shift/reduce
State 97 conflicts: 3 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 2 shift/reduce
State 106 conflicts: 1 shift/reduce
State 267 conflicts: 1 shift/reduce
State 268 conflicts: 1 shift/reduce
State 269 conflicts: 2 shift/reduce
State 270 conflicts: 2 shift/reduce
State 278 conflicts: 1 shift/reduce
State 311 conflicts: 1 shift/reduce
State 356 conflicts: 1 reduce/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | INT_CONST
    3                   | FLOAT_CONST
    4                   | FRACTION_CONST
    5                   | CHAR_CONST
    6                   | STRING_LITERAL
    7                   | L_PARAN expression R_PARAN

    8 postfix_expression: primary_expression
    9                   | postfix_expression L_SQRB expression R_SQRB
   10                   | postfix_expression L_PARAN R_PARAN
   11                   | postfix_expression L_PARAN argument_expression_list R_PARAN
   12                   | postfix_expression DOT IDENTIFIER
   13                   | postfix_expression ARROW_ASSIGN IDENTIFIER
   14                   | postfix_expression INCREMENT
   15                   | postfix_expression DECREMENT
   16                   | L_PARAN type_name R_PARAN L_BRACES initializer_list R_BRACES
   17                   | L_PARAN type_name R_PARAN L_BRACES initializer_list COMMA R_BRACES

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list COMMA assignment_expression

   20 unary_expression: postfix_expression
   21                 | INCREMENT unary_expression
   22                 | DECREMENT unary_expression
   23                 | unary_operator cast_expression
   24                 | SIZEOF unary_expression
   25                 | SIZEOF L_PARAN type_name R_PARAN

   26 unary_operator: ADD
   27               | MINUS
   28               | MUL
   29               | NEGATE
   30               | BIT_AND
   31               | NOT

   32 cast_expression: unary_expression
   33                | L_PARAN type_name R_PARAN cast_expression

   34 multiplicative_expression: cast_expression
   35                          | multiplicative_expression MUL cast_expression
   36                          | multiplicative_expression DIVIDE cast_expression
   37                          | multiplicative_expression REMAINDER cast_expression

   38 additive_expression: multiplicative_expression
   39                    | additive_expression ADD multiplicative_expression
   40                    | additive_expression MINUS multiplicative_expression

   41 shift_expression: additive_expression
   42                 | shift_expression L_SHIFT additive_expression
   43                 | shift_expression R_SHIFT additive_expression

   44 relational_expression: shift_expression
   45                      | relational_expression LESS_THAN shift_expression
   46                      | relational_expression GREATER_THAN shift_expression
   47                      | relational_expression LESS_THAN_EQUAL shift_expression
   48                      | relational_expression GREATER_THAN_EQUAL shift_expression

   49 equality_expression: relational_expression
   50                    | equality_expression IS_EQUAL relational_expression
   51                    | equality_expression NOT_EQUAL relational_expression

   52 AND_expression: equality_expression
   53               | AND_expression BIT_AND equality_expression

   54 exclusive_OR_expression: AND_expression
   55                        | exclusive_OR_expression BIT_XOR AND_expression

   56 inclusive_OR_expression: exclusive_OR_expression
   57                        | inclusive_OR_expression BIT_OR exclusive_OR_expression

   58 BOOL_AND_expression: inclusive_OR_expression
   59                    | BOOL_AND_expression BOOL_AND M inclusive_OR_expression

   60 BOOL_OR_expression: BOOL_AND_expression
   61                   | BOOL_OR_expression BOOL_OR M BOOL_AND_expression

   62 conditional_expression: BOOL_OR_expression
   63                       | BOOL_OR_expression QM M expression N COLON M conditional_expression

   64 assignment_expression: conditional_expression
   65                      | unary_expression assignment_operator assignment_expression

   66 assignment_operator: ASSIGN
   67                    | ADD_ASSIGN
   68                    | MINUS_ASSIGN
   69                    | MUL_ASSIGN
   70                    | DIVIDE_ASSIGN
   71                    | REM_ASSIGN
   72                    | L_SHIFT_ASSIGN
   73                    | R_SHIFT_ASSIGN
   74                    | BIT_OR_ASSIGN
   75                    | BIT_AND_ASSIGN
   76                    | BIT_XOR_ASSIGN

   77 expression: assignment_expression
   78           | expression COMMA assignment_expression

   79 constant_expression: conditional_expression

   80 storage_class_specifier: EXTERN
   81                        | STATIC
   82                        | AUTO
   83                        | REGISTER

   84 type_specifier: VOID
   85               | CHAR
   86               | SHORT
   87               | INT
   88               | LONG
   89               | FLOAT
   90               | DOUBLE
   91               | SIGNED
   92               | UNSIGNED
   93               | _BOOL
   94               | _COMPLEX
   95               | _IMAGINARY
   96               | enum_specifier

   97 function_specifier: INLINE

   98 init_declarator_list: init_declarator
   99                     | init_declarator_list COMMA init_declarator

  100 init_declarator: declarator
  101                | declarator ASSIGN initializer

  102 declaration_specifiers: storage_class_specifier
  103                       | storage_class_specifier declaration_specifiers
  104                       | type_specifier
  105                       | type_specifier declaration_specifiers
  106                       | type_qualifier
  107                       | type_qualifier declaration_specifiers
  108                       | function_specifier
  109                       | function_specifier declaration_specifiers

  110 declaration: declaration_specifiers
  111            | declaration_specifiers init_declarator_list

  112 type_qualifier: CONST
  113               | RESTRICT
  114               | VOLATILE

  115 specifier_qualifier_list: type_specifier
  116                         | type_specifier specifier_qualifier_list
  117                         | type_qualifier
  118                         | type_qualifier specifier_qualifier_list

  119 enumerator: IDENTIFIER
  120           | IDENTIFIER ASSIGN constant_expression

  121 enumerator_list: enumerator
  122                | enumerator_list COMMA enumerator

  123 enum_specifier: ENUM IDENTIFIER L_BRACES enumerator_list R_BRACES
  124               | ENUM L_BRACES enumerator_list R_BRACES
  125               | ENUM IDENTIFIER L_BRACES enumerator_list COMMA R_BRACES
  126               | ENUM L_BRACES enumerator_list COMMA R_BRACES
  127               | ENUM IDENTIFIER

  128 pointer: MUL
  129        | MUL type_qualifier_list
  130        | MUL type_qualifier_list pointer
  131        | MUL pointer

  132 direct_declarator: IDENTIFIER
  133                  | L_PARAN declarator R_PARAN
  134                  | direct_declarator L_SQRB type_qualifier_list assignment_expression R_SQRB
  135                  | direct_declarator L_SQRB R_SQRB
  136                  | direct_declarator L_SQRB type_qualifier_list R_SQRB
  137                  | direct_declarator L_SQRB assignment_expression R_SQRB
  138                  | direct_declarator L_SQRB STATIC type_qualifier_list assignment_expression R_SQRB
  139                  | direct_declarator L_SQRB STATIC assignment_expression R_SQRB
  140                  | direct_declarator L_SQRB type_qualifier_list STATIC assignment_expression R_SQRB
  141                  | direct_declarator L_SQRB type_qualifier_list MUL R_SQRB
  142                  | direct_declarator L_SQRB MUL R_SQRB
  143                  | direct_declarator L_PARAN X parameter_type_list R_PARAN
  144                  | direct_declarator L_PARAN X identifier_list R_PARAN
  145                  | direct_declarator L_PARAN X R_PARAN

  146 declarator: direct_declarator
  147           | pointer direct_declarator

  148 type_qualifier_list: type_qualifier
  149                    | type_qualifier_list type_qualifier

  150 parameter_type_list: parameter_list
  151                    | parameter_list COMMA ELLIPSES

  152 parameter_declaration: declaration_specifiers
  153                      | declaration_specifiers declarator

  154 parameter_list: parameter_declaration
  155               | parameter_list COMMA parameter_declaration

  156 identifier_list: IDENTIFIER
  157                | identifier_list COMMA IDENTIFIER

  158 type_name: specifier_qualifier_list

  159 initializer: assignment_expression
  160            | L_BRACES initializer_list R_BRACES
  161            | L_BRACES initializer_list COMMA R_BRACES

  162 initializer_list: designation initializer
  163                 | initializer
  164                 | initializer_list COMMA designation initializer
  165                 | initializer_list COMMA initializer

  166 designation: designator_list ASSIGN

  167 designator_list: designator
  168                | designator_list designator

  169 designator: L_SQRB constant_expression R_SQRB
  170           | DOT IDENTIFIER

  171 labeled_statement: IDENTIFIER COLON statement
  172                  | CASE constant_expression COLON statement
  173                  | DEFAULT COLON statement

  174 compound_statement: L_BRACES block_item_list R_BRACES
  175                   | L_BRACES R_BRACES

  176 block_item_list: block_item
  177                | block_item_list M block_item

  178 block_item: M declaration
  179           | statement

  180 expression_statement: expression SEMICOLON
  181                     | SEMICOLON

  182 M: %empty

  183 N: %empty

  184 expression_opt1: %empty
  185                | expression

  186 expression_opt2: %empty
  187                | expression

  188 selection_statement: IF L_PARAN expression_opt2 R_PARAN M statement N ELSE M statement
  189                    | IF L_PARAN expression_opt2 R_PARAN M statement
  190                    | SWITCH L_PARAN expression R_PARAN statement

  191 iteration_statement: WHILE M L_PARAN expression_opt2 R_PARAN M statement
  192                    | DO M statement M WHILE L_PARAN expression_opt2 R_PARAN SEMICOLON
  193                    | FOR L_PARAN expression_opt1 SEMICOLON M expression_opt2 SEMICOLON M expression_opt1 N R_PARAN M statement
  194                    | FOR L_PARAN declaration expression SEMICOLON expression R_PARAN statement
  195                    | FOR L_PARAN declaration expression SEMICOLON R_PARAN statement
  196                    | FOR L_PARAN declaration SEMICOLON expression R_PARAN statement
  197                    | FOR L_PARAN declaration SEMICOLON R_PARAN statement

  198 jump_statement: GOTO IDENTIFIER SEMICOLON
  199               | CONTINUE SEMICOLON
  200               | BREAK SEMICOLON
  201               | RETURN expression SEMICOLON
  202               | RETURN SEMICOLON

  203 statement: labeled_statement
  204          | compound_statement
  205          | expression_statement
  206          | selection_statement
  207          | iteration_statement
  208          | jump_statement

  209 external_declaration: function_definition
  210                     | declaration SEMICOLON Y

  211 translation_unit: external_declaration
  212                 | translation_unit external_declaration

  213 declaration_list: declaration
  214                 | declaration_list declaration

  215 function_definition: declaration_specifiers declarator declaration_list compound_statement Y
  216                    | declaration_specifiers declarator compound_statement Y

  217 X: %empty

  218 Y: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
AUTO (258) 82
BREAK (259) 200
CASE (260) 172
CHAR (261) 85
CONST (262) 112
CONTINUE (263) 199
DEFAULT (264) 173
DO (265) 192
DOUBLE (266) 90
ELSE (267) 188
ENUM (268) 123 124 125 126 127
EXTERN (269) 80
FLOAT (270) 89
FOR (271) 193 194 195 196 197
GOTO (272) 198
IF (273) 188 189
INLINE (274) 97
INT (275) 87
LONG (276) 88
REGISTER (277) 83
RESTRICT (278) 113
RETURN (279) 201 202
SHORT (280) 86
SIGNED (281) 91
SIZEOF (282) 24 25
STATIC (283) 81 138 139 140
STRUCT (284)
SWITCH (285) 190
TYPEDEF (286)
UNION (287)
UNSIGNED (288) 92
VOID (289) 84
VOLATILE (290) 114
WHILE (291) 191 192
_BOOL (292) 93
_COMPLEX (293) 94
_IMAGINARY (294) 95
INT_CONST (295) 2
FRACTION_CONST (296) 4
FLOAT_CONST (297) 3
CHAR_CONST (298) 5
STRING_LITERAL (299) 6
IDENTIFIER (300) 1 12 13 119 120 123 125 127 132 156 157 170 171 198
L_PARAN (301) 7 10 11 16 17 25 33 133 143 144 145 188 189 190 191 192
    193 194 195 196 197
R_PARAN (302) 7 10 11 16 17 25 33 133 143 144 145 188 189 190 191 192
    193 194 195 196 197
L_SQRB (303) 9 134 135 136 137 138 139 140 141 142 169
R_SQRB (304) 9 134 135 136 137 138 139 140 141 142 169
DOT (305) 12 170
ARROW_ASSIGN (306) 13
INCREMENT (307) 14 21
DECREMENT (308) 15 22
L_BRACES (309) 16 17 123 124 125 126 160 161 174 175
R_BRACES (310) 16 17 123 124 125 126 160 161 174 175
COMMA (311) 17 19 78 99 122 125 126 151 155 157 161 164 165
BIT_AND (312) 30 53
ADD (313) 26 39
MINUS (314) 27 40
MUL (315) 28 35 128 129 130 131 141 142
DIVIDE (316) 36
REMAINDER (317) 37
NEGATE (318) 29
NOT (319) 31
SPACE (320)
L_SHIFT (321) 42
R_SHIFT (322) 43
LESS_THAN (323) 45
GREATER_THAN (324) 46
LESS_THAN_EQUAL (325) 47
GREATER_THAN_EQUAL (326) 48
IS_EQUAL (327) 50
NOT_EQUAL (328) 51
BIT_OR (329) 57
BIT_XOR (330) 55
BOOL_OR (331) 61
BOOL_AND (332) 59
QM (333) 63
COLON (334) 63 171 172 173
ASSIGN (335) 66 101 120 166
ADD_ASSIGN (336) 67
MINUS_ASSIGN (337) 68
MUL_ASSIGN (338) 69
DIVIDE_ASSIGN (339) 70
REM_ASSIGN (340) 71
L_SHIFT_ASSIGN (341) 72
R_SHIFT_ASSIGN (342) 73
BIT_AND_ASSIGN (343) 75
BIT_OR_ASSIGN (344) 74
BIT_XOR_ASSIGN (345) 76
ELLIPSES (346) 151
SEMICOLON (347) 180 181 192 193 194 195 196 197 198 199 200 201 202
    210
HASH (348)


Nonterminals, with rules where they appear

$accept (94)
    on left: 0
primary_expression (95)
    on left: 1 2 3 4 5 6 7, on right: 8
postfix_expression (96)
    on left: 8 9 10 11 12 13 14 15 16 17, on right: 9 10 11 12 13 14
    15 20
argument_expression_list (97)
    on left: 18 19, on right: 11 19
unary_expression (98)
    on left: 20 21 22 23 24 25, on right: 21 22 24 32 65
unary_operator (99)
    on left: 26 27 28 29 30 31, on right: 23
cast_expression (100)
    on left: 32 33, on right: 23 33 34 35 36 37
multiplicative_expression (101)
    on left: 34 35 36 37, on right: 35 36 37 38 39 40
additive_expression (102)
    on left: 38 39 40, on right: 39 40 41 42 43
shift_expression (103)
    on left: 41 42 43, on right: 42 43 44 45 46 47 48
relational_expression (104)
    on left: 44 45 46 47 48, on right: 45 46 47 48 49 50 51
equality_expression (105)
    on left: 49 50 51, on right: 50 51 52 53
AND_expression (106)
    on left: 52 53, on right: 53 54 55
exclusive_OR_expression (107)
    on left: 54 55, on right: 55 56 57
inclusive_OR_expression (108)
    on left: 56 57, on right: 57 58 59
BOOL_AND_expression (109)
    on left: 58 59, on right: 59 60 61
BOOL_OR_expression (110)
    on left: 60 61, on right: 61 62 63
conditional_expression (111)
    on left: 62 63, on right: 63 64 79
assignment_expression (112)
    on left: 64 65, on right: 18 19 65 77 78 134 137 138 139 140 159
assignment_operator (113)
    on left: 66 67 68 69 70 71 72 73 74 75 76, on right: 65
expression (114)
    on left: 77 78, on right: 7 9 63 78 180 185 187 190 194 195 196
    201
constant_expression (115)
    on left: 79, on right: 120 169 172
storage_class_specifier (116)
    on left: 80 81 82 83, on right: 102 103
type_specifier (117)
    on left: 84 85 86 87 88 89 90 91 92 93 94 95 96, on right: 104
    105 115 116
function_specifier (118)
    on left: 97, on right: 108 109
init_declarator_list (119)
    on left: 98 99, on right: 99 111
init_declarator (120)
    on left: 100 101, on right: 98 99
declaration_specifiers (121)
    on left: 102 103 104 105 106 107 108 109, on right: 103 105 107
    109 110 111 152 153 215 216
declaration (122)
    on left: 110 111, on right: 178 194 195 196 197 210 213 214
type_qualifier (123)
    on left: 112 113 114, on right: 106 107 117 118 148 149
specifier_qualifier_list (124)
    on left: 115 116 117 118, on right: 116 118 158
enumerator (125)
    on left: 119 120, on right: 121 122
enumerator_list (126)
    on left: 121 122, on right: 122 123 124 125 126
enum_specifier (127)
    on left: 123 124 125 126 127, on right: 96
pointer (128)
    on left: 128 129 130 131, on right: 130 131 147
direct_declarator (129)
    on left: 132 133 134 135 136 137 138 139 140 141 142 143 144 145,
    on right: 134 135 136 137 138 139 140 141 142 143 144 145 146 147
declarator (130)
    on left: 146 147, on right: 100 101 133 153 215 216
type_qualifier_list (131)
    on left: 148 149, on right: 129 130 134 136 138 140 141 149
parameter_type_list (132)
    on left: 150 151, on right: 143
parameter_declaration (133)
    on left: 152 153, on right: 154 155
parameter_list (134)
    on left: 154 155, on right: 150 151 155
identifier_list (135)
    on left: 156 157, on right: 144 157
type_name (136)
    on left: 158, on right: 16 17 25 33
initializer (137)
    on left: 159 160 161, on right: 101 162 163 164 165
initializer_list (138)
    on left: 162 163 164 165, on right: 16 17 160 161 164 165
designation (139)
    on left: 166, on right: 162 164
designator_list (140)
    on left: 167 168, on right: 166 168
designator (141)
    on left: 169 170, on right: 167 168
labeled_statement (142)
    on left: 171 172 173, on right: 203
compound_statement (143)
    on left: 174 175, on right: 204 215 216
block_item_list (144)
    on left: 176 177, on right: 174 177
block_item (145)
    on left: 178 179, on right: 176 177
expression_statement (146)
    on left: 180 181, on right: 205
M (147)
    on left: 182, on right: 59 61 63 177 178 188 189 191 192 193
N (148)
    on left: 183, on right: 63 188 193
expression_opt1 (149)
    on left: 184 185, on right: 193
expression_opt2 (150)
    on left: 186 187, on right: 188 189 191 192 193
selection_statement (151)
    on left: 188 189 190, on right: 206
iteration_statement (152)
    on left: 191 192 193 194 195 196 197, on right: 207
jump_statement (153)
    on left: 198 199 200 201 202, on right: 208
statement (154)
    on left: 203 204 205 206 207 208, on right: 171 172 173 179 188
    189 190 191 192 193 194 195 196 197
external_declaration (155)
    on left: 209 210, on right: 211 212
translation_unit (156)
    on left: 211 212, on right: 0 212
declaration_list (157)
    on left: 213 214, on right: 214 215
function_definition (158)
    on left: 215 216, on right: 209
X (159)
    on left: 217, on right: 143 144 145
Y (160)
    on left: 218, on right: 210 215 216


State 0

    0 $accept: . translation_unit $end

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 25
    declaration              go to state 26
    type_qualifier           go to state 27
    enum_specifier           go to state 28
    external_declaration     go to state 29
    translation_unit         go to state 30
    function_definition      go to state 31


State 1

   82 storage_class_specifier: AUTO .

    $default  reduce using rule 82 (storage_class_specifier)


State 2

   85 type_specifier: CHAR .

    $default  reduce using rule 85 (type_specifier)


State 3

  112 type_qualifier: CONST .

    $default  reduce using rule 112 (type_qualifier)


State 4

   90 type_specifier: DOUBLE .

    $default  reduce using rule 90 (type_specifier)


State 5

  123 enum_specifier: ENUM . IDENTIFIER L_BRACES enumerator_list R_BRACES
  124               | ENUM . L_BRACES enumerator_list R_BRACES
  125               | ENUM . IDENTIFIER L_BRACES enumerator_list COMMA R_BRACES
  126               | ENUM . L_BRACES enumerator_list COMMA R_BRACES
  127               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    L_BRACES    shift, and go to state 33


State 6

   80 storage_class_specifier: EXTERN .

    $default  reduce using rule 80 (storage_class_specifier)


State 7

   89 type_specifier: FLOAT .

    $default  reduce using rule 89 (type_specifier)


State 8

   97 function_specifier: INLINE .

    $default  reduce using rule 97 (function_specifier)


State 9

   87 type_specifier: INT .

    $default  reduce using rule 87 (type_specifier)


State 10

   88 type_specifier: LONG .

    $default  reduce using rule 88 (type_specifier)


State 11

   83 storage_class_specifier: REGISTER .

    $default  reduce using rule 83 (storage_class_specifier)


State 12

  113 type_qualifier: RESTRICT .

    $default  reduce using rule 113 (type_qualifier)


State 13

   86 type_specifier: SHORT .

    $default  reduce using rule 86 (type_specifier)


State 14

   91 type_specifier: SIGNED .

    $default  reduce using rule 91 (type_specifier)


State 15

   81 storage_class_specifier: STATIC .

    $default  reduce using rule 81 (storage_class_specifier)


State 16

   92 type_specifier: UNSIGNED .

    $default  reduce using rule 92 (type_specifier)


State 17

   84 type_specifier: VOID .

    $default  reduce using rule 84 (type_specifier)


State 18

  114 type_qualifier: VOLATILE .

    $default  reduce using rule 114 (type_qualifier)


State 19

   93 type_specifier: _BOOL .

    $default  reduce using rule 93 (type_specifier)


State 20

   94 type_specifier: _COMPLEX .

    $default  reduce using rule 94 (type_specifier)


State 21

   95 type_specifier: _IMAGINARY .

    $default  reduce using rule 95 (type_specifier)


State 22

  102 declaration_specifiers: storage_class_specifier .
  103                       | storage_class_specifier . declaration_specifiers

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    AUTO        [reduce using rule 102 (declaration_specifiers)]
    CHAR        [reduce using rule 102 (declaration_specifiers)]
    CONST       [reduce using rule 102 (declaration_specifiers)]
    DOUBLE      [reduce using rule 102 (declaration_specifiers)]
    ENUM        [reduce using rule 102 (declaration_specifiers)]
    EXTERN      [reduce using rule 102 (declaration_specifiers)]
    FLOAT       [reduce using rule 102 (declaration_specifiers)]
    INLINE      [reduce using rule 102 (declaration_specifiers)]
    INT         [reduce using rule 102 (declaration_specifiers)]
    LONG        [reduce using rule 102 (declaration_specifiers)]
    REGISTER    [reduce using rule 102 (declaration_specifiers)]
    RESTRICT    [reduce using rule 102 (declaration_specifiers)]
    SHORT       [reduce using rule 102 (declaration_specifiers)]
    SIGNED      [reduce using rule 102 (declaration_specifiers)]
    STATIC      [reduce using rule 102 (declaration_specifiers)]
    UNSIGNED    [reduce using rule 102 (declaration_specifiers)]
    VOID        [reduce using rule 102 (declaration_specifiers)]
    VOLATILE    [reduce using rule 102 (declaration_specifiers)]
    _BOOL       [reduce using rule 102 (declaration_specifiers)]
    _COMPLEX    [reduce using rule 102 (declaration_specifiers)]
    _IMAGINARY  [reduce using rule 102 (declaration_specifiers)]
    $default    reduce using rule 102 (declaration_specifiers)

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 34
    type_qualifier           go to state 27
    enum_specifier           go to state 28


State 23

  104 declaration_specifiers: type_specifier .
  105                       | type_specifier . declaration_specifiers

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    AUTO        [reduce using rule 104 (declaration_specifiers)]
    CHAR        [reduce using rule 104 (declaration_specifiers)]
    CONST       [reduce using rule 104 (declaration_specifiers)]
    DOUBLE      [reduce using rule 104 (declaration_specifiers)]
    ENUM        [reduce using rule 104 (declaration_specifiers)]
    EXTERN      [reduce using rule 104 (declaration_specifiers)]
    FLOAT       [reduce using rule 104 (declaration_specifiers)]
    INLINE      [reduce using rule 104 (declaration_specifiers)]
    INT         [reduce using rule 104 (declaration_specifiers)]
    LONG        [reduce using rule 104 (declaration_specifiers)]
    REGISTER    [reduce using rule 104 (declaration_specifiers)]
    RESTRICT    [reduce using rule 104 (declaration_specifiers)]
    SHORT       [reduce using rule 104 (declaration_specifiers)]
    SIGNED      [reduce using rule 104 (declaration_specifiers)]
    STATIC      [reduce using rule 104 (declaration_specifiers)]
    UNSIGNED    [reduce using rule 104 (declaration_specifiers)]
    VOID        [reduce using rule 104 (declaration_specifiers)]
    VOLATILE    [reduce using rule 104 (declaration_specifiers)]
    _BOOL       [reduce using rule 104 (declaration_specifiers)]
    _COMPLEX    [reduce using rule 104 (declaration_specifiers)]
    _IMAGINARY  [reduce using rule 104 (declaration_specifiers)]
    $default    reduce using rule 104 (declaration_specifiers)

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 35
    type_qualifier           go to state 27
    enum_specifier           go to state 28


State 24

  108 declaration_specifiers: function_specifier .
  109                       | function_specifier . declaration_specifiers

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    AUTO        [reduce using rule 108 (declaration_specifiers)]
    CHAR        [reduce using rule 108 (declaration_specifiers)]
    CONST       [reduce using rule 108 (declaration_specifiers)]
    DOUBLE      [reduce using rule 108 (declaration_specifiers)]
    ENUM        [reduce using rule 108 (declaration_specifiers)]
    EXTERN      [reduce using rule 108 (declaration_specifiers)]
    FLOAT       [reduce using rule 108 (declaration_specifiers)]
    INLINE      [reduce using rule 108 (declaration_specifiers)]
    INT         [reduce using rule 108 (declaration_specifiers)]
    LONG        [reduce using rule 108 (declaration_specifiers)]
    REGISTER    [reduce using rule 108 (declaration_specifiers)]
    RESTRICT    [reduce using rule 108 (declaration_specifiers)]
    SHORT       [reduce using rule 108 (declaration_specifiers)]
    SIGNED      [reduce using rule 108 (declaration_specifiers)]
    STATIC      [reduce using rule 108 (declaration_specifiers)]
    UNSIGNED    [reduce using rule 108 (declaration_specifiers)]
    VOID        [reduce using rule 108 (declaration_specifiers)]
    VOLATILE    [reduce using rule 108 (declaration_specifiers)]
    _BOOL       [reduce using rule 108 (declaration_specifiers)]
    _COMPLEX    [reduce using rule 108 (declaration_specifiers)]
    _IMAGINARY  [reduce using rule 108 (declaration_specifiers)]
    $default    reduce using rule 108 (declaration_specifiers)

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 36
    type_qualifier           go to state 27
    enum_specifier           go to state 28


State 25

  110 declaration: declaration_specifiers .
  111            | declaration_specifiers . init_declarator_list
  215 function_definition: declaration_specifiers . declarator declaration_list compound_statement Y
  216                    | declaration_specifiers . declarator compound_statement Y

    IDENTIFIER  shift, and go to state 37
    L_PARAN     shift, and go to state 38
    MUL         shift, and go to state 39

    $default  reduce using rule 110 (declaration)

    init_declarator_list  go to state 40
    init_declarator       go to state 41
    pointer               go to state 42
    direct_declarator     go to state 43
    declarator            go to state 44


State 26

  210 external_declaration: declaration . SEMICOLON Y

    SEMICOLON  shift, and go to state 45


State 27

  106 declaration_specifiers: type_qualifier .
  107                       | type_qualifier . declaration_specifiers

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    AUTO        [reduce using rule 106 (declaration_specifiers)]
    CHAR        [reduce using rule 106 (declaration_specifiers)]
    CONST       [reduce using rule 106 (declaration_specifiers)]
    DOUBLE      [reduce using rule 106 (declaration_specifiers)]
    ENUM        [reduce using rule 106 (declaration_specifiers)]
    EXTERN      [reduce using rule 106 (declaration_specifiers)]
    FLOAT       [reduce using rule 106 (declaration_specifiers)]
    INLINE      [reduce using rule 106 (declaration_specifiers)]
    INT         [reduce using rule 106 (declaration_specifiers)]
    LONG        [reduce using rule 106 (declaration_specifiers)]
    REGISTER    [reduce using rule 106 (declaration_specifiers)]
    RESTRICT    [reduce using rule 106 (declaration_specifiers)]
    SHORT       [reduce using rule 106 (declaration_specifiers)]
    SIGNED      [reduce using rule 106 (declaration_specifiers)]
    STATIC      [reduce using rule 106 (declaration_specifiers)]
    UNSIGNED    [reduce using rule 106 (declaration_specifiers)]
    VOID        [reduce using rule 106 (declaration_specifiers)]
    VOLATILE    [reduce using rule 106 (declaration_specifiers)]
    _BOOL       [reduce using rule 106 (declaration_specifiers)]
    _COMPLEX    [reduce using rule 106 (declaration_specifiers)]
    _IMAGINARY  [reduce using rule 106 (declaration_specifiers)]
    $default    reduce using rule 106 (declaration_specifiers)

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 46
    type_qualifier           go to state 27
    enum_specifier           go to state 28


State 28

   96 type_specifier: enum_specifier .

    $default  reduce using rule 96 (type_specifier)


State 29

  211 translation_unit: external_declaration .

    $default  reduce using rule 211 (translation_unit)


State 30

    0 $accept: translation_unit . $end
  212 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 47
    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 25
    declaration              go to state 26
    type_qualifier           go to state 27
    enum_specifier           go to state 28
    external_declaration     go to state 48
    function_definition      go to state 31


State 31

  209 external_declaration: function_definition .

    $default  reduce using rule 209 (external_declaration)


State 32

  123 enum_specifier: ENUM IDENTIFIER . L_BRACES enumerator_list R_BRACES
  125               | ENUM IDENTIFIER . L_BRACES enumerator_list COMMA R_BRACES
  127               | ENUM IDENTIFIER .

    L_BRACES  shift, and go to state 49

    L_BRACES  [reduce using rule 127 (enum_specifier)]
    $default  reduce using rule 127 (enum_specifier)


State 33

  124 enum_specifier: ENUM L_BRACES . enumerator_list R_BRACES
  126               | ENUM L_BRACES . enumerator_list COMMA R_BRACES

    IDENTIFIER  shift, and go to state 50

    enumerator       go to state 51
    enumerator_list  go to state 52


State 34

  103 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 103 (declaration_specifiers)


State 35

  105 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 105 (declaration_specifiers)


State 36

  109 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 109 (declaration_specifiers)


State 37

  132 direct_declarator: IDENTIFIER .

    $default  reduce using rule 132 (direct_declarator)


State 38

  133 direct_declarator: L_PARAN . declarator R_PARAN

    IDENTIFIER  shift, and go to state 37
    L_PARAN     shift, and go to state 38
    MUL         shift, and go to state 39

    pointer            go to state 42
    direct_declarator  go to state 43
    declarator         go to state 53


State 39

  128 pointer: MUL .
  129        | MUL . type_qualifier_list
  130        | MUL . type_qualifier_list pointer
  131        | MUL . pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18
    MUL       shift, and go to state 39

    $default  reduce using rule 128 (pointer)

    type_qualifier       go to state 54
    pointer              go to state 55
    type_qualifier_list  go to state 56


State 40

   99 init_declarator_list: init_declarator_list . COMMA init_declarator
  111 declaration: declaration_specifiers init_declarator_list .

    COMMA  shift, and go to state 57

    $default  reduce using rule 111 (declaration)


State 41

   98 init_declarator_list: init_declarator .

    $default  reduce using rule 98 (init_declarator_list)


State 42

  147 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 37
    L_PARAN     shift, and go to state 38

    direct_declarator  go to state 58


State 43

  134 direct_declarator: direct_declarator . L_SQRB type_qualifier_list assignment_expression R_SQRB
  135                  | direct_declarator . L_SQRB R_SQRB
  136                  | direct_declarator . L_SQRB type_qualifier_list R_SQRB
  137                  | direct_declarator . L_SQRB assignment_expression R_SQRB
  138                  | direct_declarator . L_SQRB STATIC type_qualifier_list assignment_expression R_SQRB
  139                  | direct_declarator . L_SQRB STATIC assignment_expression R_SQRB
  140                  | direct_declarator . L_SQRB type_qualifier_list STATIC assignment_expression R_SQRB
  141                  | direct_declarator . L_SQRB type_qualifier_list MUL R_SQRB
  142                  | direct_declarator . L_SQRB MUL R_SQRB
  143                  | direct_declarator . L_PARAN X parameter_type_list R_PARAN
  144                  | direct_declarator . L_PARAN X identifier_list R_PARAN
  145                  | direct_declarator . L_PARAN X R_PARAN
  146 declarator: direct_declarator .

    L_PARAN  shift, and go to state 59
    L_SQRB   shift, and go to state 60

    L_PARAN   [reduce using rule 146 (declarator)]
    $default  reduce using rule 146 (declarator)


State 44

  100 init_declarator: declarator .
  101                | declarator . ASSIGN initializer
  215 function_definition: declaration_specifiers declarator . declaration_list compound_statement Y
  216                    | declaration_specifiers declarator . compound_statement Y

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    L_BRACES    shift, and go to state 61
    ASSIGN      shift, and go to state 62

    $default  reduce using rule 100 (init_declarator)

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 63
    declaration              go to state 64
    type_qualifier           go to state 27
    enum_specifier           go to state 28
    compound_statement       go to state 65
    declaration_list         go to state 66


State 45

  210 external_declaration: declaration SEMICOLON . Y

    $default  reduce using rule 218 (Y)

    Y  go to state 67


State 46

  107 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 107 (declaration_specifiers)


State 47

    0 $accept: translation_unit $end .

    $default  accept


State 48

  212 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 212 (translation_unit)


State 49

  123 enum_specifier: ENUM IDENTIFIER L_BRACES . enumerator_list R_BRACES
  125               | ENUM IDENTIFIER L_BRACES . enumerator_list COMMA R_BRACES

    IDENTIFIER  shift, and go to state 50

    enumerator       go to state 51
    enumerator_list  go to state 68


State 50

  119 enumerator: IDENTIFIER .
  120           | IDENTIFIER . ASSIGN constant_expression

    ASSIGN  shift, and go to state 69

    $default  reduce using rule 119 (enumerator)


State 51

  121 enumerator_list: enumerator .

    $default  reduce using rule 121 (enumerator_list)


State 52

  122 enumerator_list: enumerator_list . COMMA enumerator
  124 enum_specifier: ENUM L_BRACES enumerator_list . R_BRACES
  126               | ENUM L_BRACES enumerator_list . COMMA R_BRACES

    R_BRACES  shift, and go to state 70
    COMMA     shift, and go to state 71


State 53

  133 direct_declarator: L_PARAN declarator . R_PARAN

    R_PARAN  shift, and go to state 72


State 54

  148 type_qualifier_list: type_qualifier .

    $default  reduce using rule 148 (type_qualifier_list)


State 55

  131 pointer: MUL pointer .

    $default  reduce using rule 131 (pointer)


State 56

  129 pointer: MUL type_qualifier_list .
  130        | MUL type_qualifier_list . pointer
  149 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18
    MUL       shift, and go to state 39

    $default  reduce using rule 129 (pointer)

    type_qualifier  go to state 73
    pointer         go to state 74


State 57

   99 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER  shift, and go to state 37
    L_PARAN     shift, and go to state 38
    MUL         shift, and go to state 39

    init_declarator    go to state 75
    pointer            go to state 42
    direct_declarator  go to state 43
    declarator         go to state 76


State 58

  134 direct_declarator: direct_declarator . L_SQRB type_qualifier_list assignment_expression R_SQRB
  135                  | direct_declarator . L_SQRB R_SQRB
  136                  | direct_declarator . L_SQRB type_qualifier_list R_SQRB
  137                  | direct_declarator . L_SQRB assignment_expression R_SQRB
  138                  | direct_declarator . L_SQRB STATIC type_qualifier_list assignment_expression R_SQRB
  139                  | direct_declarator . L_SQRB STATIC assignment_expression R_SQRB
  140                  | direct_declarator . L_SQRB type_qualifier_list STATIC assignment_expression R_SQRB
  141                  | direct_declarator . L_SQRB type_qualifier_list MUL R_SQRB
  142                  | direct_declarator . L_SQRB MUL R_SQRB
  143                  | direct_declarator . L_PARAN X parameter_type_list R_PARAN
  144                  | direct_declarator . L_PARAN X identifier_list R_PARAN
  145                  | direct_declarator . L_PARAN X R_PARAN
  147 declarator: pointer direct_declarator .

    L_PARAN  shift, and go to state 59
    L_SQRB   shift, and go to state 60

    L_PARAN   [reduce using rule 147 (declarator)]
    $default  reduce using rule 147 (declarator)


State 59

  143 direct_declarator: direct_declarator L_PARAN . X parameter_type_list R_PARAN
  144                  | direct_declarator L_PARAN . X identifier_list R_PARAN
  145                  | direct_declarator L_PARAN . X R_PARAN

    $default  reduce using rule 217 (X)

    X  go to state 77


State 60

  134 direct_declarator: direct_declarator L_SQRB . type_qualifier_list assignment_expression R_SQRB
  135                  | direct_declarator L_SQRB . R_SQRB
  136                  | direct_declarator L_SQRB . type_qualifier_list R_SQRB
  137                  | direct_declarator L_SQRB . assignment_expression R_SQRB
  138                  | direct_declarator L_SQRB . STATIC type_qualifier_list assignment_expression R_SQRB
  139                  | direct_declarator L_SQRB . STATIC assignment_expression R_SQRB
  140                  | direct_declarator L_SQRB . type_qualifier_list STATIC assignment_expression R_SQRB
  141                  | direct_declarator L_SQRB . type_qualifier_list MUL R_SQRB
  142                  | direct_declarator L_SQRB . MUL R_SQRB

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 78
    STATIC          shift, and go to state 79
    VOLATILE        shift, and go to state 18
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    R_SQRB          shift, and go to state 87
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 93
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    type_qualifier             go to state 54
    type_qualifier_list        go to state 113


State 61

  174 compound_statement: L_BRACES . block_item_list R_BRACES
  175                   | L_BRACES . R_BRACES

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    R_BRACES        shift, and go to state 126
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    $default  reduce using rule 182 (M)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    block_item_list            go to state 133
    block_item                 go to state 134
    expression_statement       go to state 135
    M                          go to state 136
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 140


State 62

  101 init_declarator: declarator ASSIGN . initializer

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 141
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 142
    initializer                go to state 143


State 63

  110 declaration: declaration_specifiers .
  111            | declaration_specifiers . init_declarator_list

    IDENTIFIER  shift, and go to state 37
    L_PARAN     shift, and go to state 38
    MUL         shift, and go to state 39

    IDENTIFIER  [reduce using rule 110 (declaration)]
    L_PARAN     [reduce using rule 110 (declaration)]
    MUL         [reduce using rule 110 (declaration)]
    $default    reduce using rule 110 (declaration)

    init_declarator_list  go to state 40
    init_declarator       go to state 41
    pointer               go to state 42
    direct_declarator     go to state 43
    declarator            go to state 76


State 64

  213 declaration_list: declaration .

    $default  reduce using rule 213 (declaration_list)


State 65

  216 function_definition: declaration_specifiers declarator compound_statement . Y

    $default  reduce using rule 218 (Y)

    Y  go to state 144


State 66

  214 declaration_list: declaration_list . declaration
  215 function_definition: declaration_specifiers declarator declaration_list . compound_statement Y

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    L_BRACES    shift, and go to state 61

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 63
    declaration              go to state 145
    type_qualifier           go to state 27
    enum_specifier           go to state 28
    compound_statement       go to state 146


State 67

  210 external_declaration: declaration SEMICOLON Y .

    $default  reduce using rule 210 (external_declaration)


State 68

  122 enumerator_list: enumerator_list . COMMA enumerator
  123 enum_specifier: ENUM IDENTIFIER L_BRACES enumerator_list . R_BRACES
  125               | ENUM IDENTIFIER L_BRACES enumerator_list . COMMA R_BRACES

    R_BRACES  shift, and go to state 147
    COMMA     shift, and go to state 148


State 69

  120 enumerator: IDENTIFIER ASSIGN . constant_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 150
    constant_expression        go to state 151


State 70

  124 enum_specifier: ENUM L_BRACES enumerator_list R_BRACES .

    $default  reduce using rule 124 (enum_specifier)


State 71

  122 enumerator_list: enumerator_list COMMA . enumerator
  126 enum_specifier: ENUM L_BRACES enumerator_list COMMA . R_BRACES

    IDENTIFIER  shift, and go to state 50
    R_BRACES    shift, and go to state 152

    enumerator  go to state 153


State 72

  133 direct_declarator: L_PARAN declarator R_PARAN .

    $default  reduce using rule 133 (direct_declarator)


State 73

  149 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 149 (type_qualifier_list)


State 74

  130 pointer: MUL type_qualifier_list pointer .

    $default  reduce using rule 130 (pointer)


State 75

   99 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 99 (init_declarator_list)


State 76

  100 init_declarator: declarator .
  101                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 62

    $default  reduce using rule 100 (init_declarator)


State 77

  143 direct_declarator: direct_declarator L_PARAN X . parameter_type_list R_PARAN
  144                  | direct_declarator L_PARAN X . identifier_list R_PARAN
  145                  | direct_declarator L_PARAN X . R_PARAN

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    IDENTIFIER  shift, and go to state 154
    R_PARAN     shift, and go to state 155

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 156
    type_qualifier           go to state 27
    enum_specifier           go to state 28
    parameter_type_list      go to state 157
    parameter_declaration    go to state 158
    parameter_list           go to state 159
    identifier_list          go to state 160


State 78

   24 unary_expression: SIZEOF . unary_expression
   25                 | SIZEOF . L_PARAN type_name R_PARAN

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 161
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 162
    unary_operator      go to state 99


State 79

  138 direct_declarator: direct_declarator L_SQRB STATIC . type_qualifier_list assignment_expression R_SQRB
  139                  | direct_declarator L_SQRB STATIC . assignment_expression R_SQRB

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 78
    VOLATILE        shift, and go to state 18
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 163
    type_qualifier             go to state 54
    type_qualifier_list        go to state 164


State 80

    2 primary_expression: INT_CONST .

    $default  reduce using rule 2 (primary_expression)


State 81

    4 primary_expression: FRACTION_CONST .

    $default  reduce using rule 4 (primary_expression)


State 82

    3 primary_expression: FLOAT_CONST .

    $default  reduce using rule 3 (primary_expression)


State 83

    5 primary_expression: CHAR_CONST .

    $default  reduce using rule 5 (primary_expression)


State 84

    6 primary_expression: STRING_LITERAL .

    $default  reduce using rule 6 (primary_expression)


State 85

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 86

    7 primary_expression: L_PARAN . expression R_PARAN
   16 postfix_expression: L_PARAN . type_name R_PARAN L_BRACES initializer_list R_BRACES
   17                   | L_PARAN . type_name R_PARAN L_BRACES initializer_list COMMA R_BRACES
   33 cast_expression: L_PARAN . type_name R_PARAN cast_expression

    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    FLOAT           shift, and go to state 7
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    _BOOL           shift, and go to state 19
    _COMPLEX        shift, and go to state 20
    _IMAGINARY      shift, and go to state 21
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 165
    type_specifier             go to state 166
    type_qualifier             go to state 167
    specifier_qualifier_list   go to state 168
    enum_specifier             go to state 28
    type_name                  go to state 169


State 87

  135 direct_declarator: direct_declarator L_SQRB R_SQRB .

    $default  reduce using rule 135 (direct_declarator)


State 88

   21 unary_expression: INCREMENT . unary_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 170
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 171
    unary_operator      go to state 99


State 89

   22 unary_expression: DECREMENT . unary_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 170
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 172
    unary_operator      go to state 99


State 90

   30 unary_operator: BIT_AND .

    $default  reduce using rule 30 (unary_operator)


State 91

   26 unary_operator: ADD .

    $default  reduce using rule 26 (unary_operator)


State 92

   27 unary_operator: MINUS .

    $default  reduce using rule 27 (unary_operator)


State 93

   28 unary_operator: MUL .
  142 direct_declarator: direct_declarator L_SQRB MUL . R_SQRB

    R_SQRB  shift, and go to state 173

    $default  reduce using rule 28 (unary_operator)


State 94

   29 unary_operator: NEGATE .

    $default  reduce using rule 29 (unary_operator)


State 95

   31 unary_operator: NOT .

    $default  reduce using rule 31 (unary_operator)


State 96

    8 postfix_expression: primary_expression .

    $default  reduce using rule 8 (postfix_expression)


State 97

    9 postfix_expression: postfix_expression . L_SQRB expression R_SQRB
   10                   | postfix_expression . L_PARAN R_PARAN
   11                   | postfix_expression . L_PARAN argument_expression_list R_PARAN
   12                   | postfix_expression . DOT IDENTIFIER
   13                   | postfix_expression . ARROW_ASSIGN IDENTIFIER
   14                   | postfix_expression . INCREMENT
   15                   | postfix_expression . DECREMENT
   20 unary_expression: postfix_expression .

    L_PARAN       shift, and go to state 174
    L_SQRB        shift, and go to state 175
    DOT           shift, and go to state 176
    ARROW_ASSIGN  shift, and go to state 177
    INCREMENT     shift, and go to state 178
    DECREMENT     shift, and go to state 179

    L_PARAN    [reduce using rule 20 (unary_expression)]
    INCREMENT  [reduce using rule 20 (unary_expression)]
    DECREMENT  [reduce using rule 20 (unary_expression)]
    $default   reduce using rule 20 (unary_expression)


State 98

   32 cast_expression: unary_expression .
   65 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGN          shift, and go to state 180
    ADD_ASSIGN      shift, and go to state 181
    MINUS_ASSIGN    shift, and go to state 182
    MUL_ASSIGN      shift, and go to state 183
    DIVIDE_ASSIGN   shift, and go to state 184
    REM_ASSIGN      shift, and go to state 185
    L_SHIFT_ASSIGN  shift, and go to state 186
    R_SHIFT_ASSIGN  shift, and go to state 187
    BIT_AND_ASSIGN  shift, and go to state 188
    BIT_OR_ASSIGN   shift, and go to state 189
    BIT_XOR_ASSIGN  shift, and go to state 190

    $default  reduce using rule 32 (cast_expression)

    assignment_operator  go to state 191


State 99

   23 unary_expression: unary_operator . cast_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 149
    unary_operator      go to state 99
    cast_expression     go to state 192


State 100

   34 multiplicative_expression: cast_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 101

   35 multiplicative_expression: multiplicative_expression . MUL cast_expression
   36                          | multiplicative_expression . DIVIDE cast_expression
   37                          | multiplicative_expression . REMAINDER cast_expression
   38 additive_expression: multiplicative_expression .

    MUL        shift, and go to state 193
    DIVIDE     shift, and go to state 194
    REMAINDER  shift, and go to state 195

    MUL       [reduce using rule 38 (additive_expression)]
    $default  reduce using rule 38 (additive_expression)


State 102

   39 additive_expression: additive_expression . ADD multiplicative_expression
   40                    | additive_expression . MINUS multiplicative_expression
   41 shift_expression: additive_expression .

    ADD    shift, and go to state 196
    MINUS  shift, and go to state 197

    ADD       [reduce using rule 41 (shift_expression)]
    MINUS     [reduce using rule 41 (shift_expression)]
    $default  reduce using rule 41 (shift_expression)


State 103

   42 shift_expression: shift_expression . L_SHIFT additive_expression
   43                 | shift_expression . R_SHIFT additive_expression
   44 relational_expression: shift_expression .

    L_SHIFT  shift, and go to state 198
    R_SHIFT  shift, and go to state 199

    $default  reduce using rule 44 (relational_expression)


State 104

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_THAN_EQUAL shift_expression
   48                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   49 equality_expression: relational_expression .

    LESS_THAN           shift, and go to state 200
    GREATER_THAN        shift, and go to state 201
    LESS_THAN_EQUAL     shift, and go to state 202
    GREATER_THAN_EQUAL  shift, and go to state 203

    $default  reduce using rule 49 (equality_expression)


State 105

   50 equality_expression: equality_expression . IS_EQUAL relational_expression
   51                    | equality_expression . NOT_EQUAL relational_expression
   52 AND_expression: equality_expression .

    IS_EQUAL   shift, and go to state 204
    NOT_EQUAL  shift, and go to state 205

    $default  reduce using rule 52 (AND_expression)


State 106

   53 AND_expression: AND_expression . BIT_AND equality_expression
   54 exclusive_OR_expression: AND_expression .

    BIT_AND  shift, and go to state 206

    BIT_AND   [reduce using rule 54 (exclusive_OR_expression)]
    $default  reduce using rule 54 (exclusive_OR_expression)


State 107

   55 exclusive_OR_expression: exclusive_OR_expression . BIT_XOR AND_expression
   56 inclusive_OR_expression: exclusive_OR_expression .

    BIT_XOR  shift, and go to state 207

    $default  reduce using rule 56 (inclusive_OR_expression)


State 108

   57 inclusive_OR_expression: inclusive_OR_expression . BIT_OR exclusive_OR_expression
   58 BOOL_AND_expression: inclusive_OR_expression .

    BIT_OR  shift, and go to state 208

    $default  reduce using rule 58 (BOOL_AND_expression)


State 109

   59 BOOL_AND_expression: BOOL_AND_expression . BOOL_AND M inclusive_OR_expression
   60 BOOL_OR_expression: BOOL_AND_expression .

    BOOL_AND  shift, and go to state 209

    $default  reduce using rule 60 (BOOL_OR_expression)


State 110

   61 BOOL_OR_expression: BOOL_OR_expression . BOOL_OR M BOOL_AND_expression
   62 conditional_expression: BOOL_OR_expression .
   63                       | BOOL_OR_expression . QM M expression N COLON M conditional_expression

    BOOL_OR  shift, and go to state 210
    QM       shift, and go to state 211

    $default  reduce using rule 62 (conditional_expression)


State 111

   64 assignment_expression: conditional_expression .

    $default  reduce using rule 64 (assignment_expression)


State 112

  137 direct_declarator: direct_declarator L_SQRB assignment_expression . R_SQRB

    R_SQRB  shift, and go to state 212


State 113

  134 direct_declarator: direct_declarator L_SQRB type_qualifier_list . assignment_expression R_SQRB
  136                  | direct_declarator L_SQRB type_qualifier_list . R_SQRB
  140                  | direct_declarator L_SQRB type_qualifier_list . STATIC assignment_expression R_SQRB
  141                  | direct_declarator L_SQRB type_qualifier_list . MUL R_SQRB
  149 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 78
    STATIC          shift, and go to state 213
    VOLATILE        shift, and go to state 18
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    R_SQRB          shift, and go to state 214
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 215
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 216
    type_qualifier             go to state 73


State 114

  200 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 217


State 115

  172 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 150
    constant_expression        go to state 218


State 116

  199 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 219


State 117

  173 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 220


State 118

  192 iteration_statement: DO . M statement M WHILE L_PARAN expression_opt2 R_PARAN SEMICOLON

    $default  reduce using rule 182 (M)

    M  go to state 221


State 119

  193 iteration_statement: FOR . L_PARAN expression_opt1 SEMICOLON M expression_opt2 SEMICOLON M expression_opt1 N R_PARAN M statement
  194                    | FOR . L_PARAN declaration expression SEMICOLON expression R_PARAN statement
  195                    | FOR . L_PARAN declaration expression SEMICOLON R_PARAN statement
  196                    | FOR . L_PARAN declaration SEMICOLON expression R_PARAN statement
  197                    | FOR . L_PARAN declaration SEMICOLON R_PARAN statement

    L_PARAN  shift, and go to state 222


State 120

  198 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 223


State 121

  188 selection_statement: IF . L_PARAN expression_opt2 R_PARAN M statement N ELSE M statement
  189                    | IF . L_PARAN expression_opt2 R_PARAN M statement

    L_PARAN  shift, and go to state 224


State 122

  201 jump_statement: RETURN . expression SEMICOLON
  202               | RETURN . SEMICOLON

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 225

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 226


State 123

  190 selection_statement: SWITCH . L_PARAN expression R_PARAN statement

    L_PARAN  shift, and go to state 227


State 124

  191 iteration_statement: WHILE . M L_PARAN expression_opt2 R_PARAN M statement

    $default  reduce using rule 182 (M)

    M  go to state 228


State 125

    1 primary_expression: IDENTIFIER .
  171 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 229

    $default  reduce using rule 1 (primary_expression)


State 126

  175 compound_statement: L_BRACES R_BRACES .

    $default  reduce using rule 175 (compound_statement)


State 127

   28 unary_operator: MUL .

    $default  reduce using rule 28 (unary_operator)


State 128

  181 expression_statement: SEMICOLON .

    $default  reduce using rule 181 (expression_statement)


State 129

   77 expression: assignment_expression .

    $default  reduce using rule 77 (expression)


State 130

   78 expression: expression . COMMA assignment_expression
  180 expression_statement: expression . SEMICOLON

    COMMA      shift, and go to state 230
    SEMICOLON  shift, and go to state 231


State 131

  203 statement: labeled_statement .

    $default  reduce using rule 203 (statement)


State 132

  204 statement: compound_statement .

    $default  reduce using rule 204 (statement)


State 133

  174 compound_statement: L_BRACES block_item_list . R_BRACES
  177 block_item_list: block_item_list . M block_item

    R_BRACES  shift, and go to state 232

    $default  reduce using rule 182 (M)

    M  go to state 233


State 134

  176 block_item_list: block_item .

    $default  reduce using rule 176 (block_item_list)


State 135

  205 statement: expression_statement .

    $default  reduce using rule 205 (statement)


State 136

  178 block_item: M . declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 63
    declaration              go to state 234
    type_qualifier           go to state 27
    enum_specifier           go to state 28


State 137

  206 statement: selection_statement .

    $default  reduce using rule 206 (statement)


State 138

  207 statement: iteration_statement .

    $default  reduce using rule 207 (statement)


State 139

  208 statement: jump_statement .

    $default  reduce using rule 208 (statement)


State 140

  179 block_item: statement .

    $default  reduce using rule 179 (block_item)


State 141

  160 initializer: L_BRACES . initializer_list R_BRACES
  161            | L_BRACES . initializer_list COMMA R_BRACES

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    L_SQRB          shift, and go to state 235
    DOT             shift, and go to state 236
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 141
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 142
    initializer                go to state 237
    initializer_list           go to state 238
    designation                go to state 239
    designator_list            go to state 240
    designator                 go to state 241


State 142

  159 initializer: assignment_expression .

    $default  reduce using rule 159 (initializer)


State 143

  101 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 101 (init_declarator)


State 144

  216 function_definition: declaration_specifiers declarator compound_statement Y .

    $default  reduce using rule 216 (function_definition)


State 145

  214 declaration_list: declaration_list declaration .

    $default  reduce using rule 214 (declaration_list)


State 146

  215 function_definition: declaration_specifiers declarator declaration_list compound_statement . Y

    $default  reduce using rule 218 (Y)

    Y  go to state 242


State 147

  123 enum_specifier: ENUM IDENTIFIER L_BRACES enumerator_list R_BRACES .

    $default  reduce using rule 123 (enum_specifier)


State 148

  122 enumerator_list: enumerator_list COMMA . enumerator
  125 enum_specifier: ENUM IDENTIFIER L_BRACES enumerator_list COMMA . R_BRACES

    IDENTIFIER  shift, and go to state 50
    R_BRACES    shift, and go to state 243

    enumerator  go to state 153


State 149

   32 cast_expression: unary_expression .

    $default  reduce using rule 32 (cast_expression)


State 150

   79 constant_expression: conditional_expression .

    $default  reduce using rule 79 (constant_expression)


State 151

  120 enumerator: IDENTIFIER ASSIGN constant_expression .

    $default  reduce using rule 120 (enumerator)


State 152

  126 enum_specifier: ENUM L_BRACES enumerator_list COMMA R_BRACES .

    $default  reduce using rule 126 (enum_specifier)


State 153

  122 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 122 (enumerator_list)


State 154

  156 identifier_list: IDENTIFIER .

    $default  reduce using rule 156 (identifier_list)


State 155

  145 direct_declarator: direct_declarator L_PARAN X R_PARAN .

    $default  reduce using rule 145 (direct_declarator)


State 156

  152 parameter_declaration: declaration_specifiers .
  153                      | declaration_specifiers . declarator

    IDENTIFIER  shift, and go to state 37
    L_PARAN     shift, and go to state 38
    MUL         shift, and go to state 39

    $default  reduce using rule 152 (parameter_declaration)

    pointer            go to state 42
    direct_declarator  go to state 43
    declarator         go to state 244


State 157

  143 direct_declarator: direct_declarator L_PARAN X parameter_type_list . R_PARAN

    R_PARAN  shift, and go to state 245


State 158

  154 parameter_list: parameter_declaration .

    $default  reduce using rule 154 (parameter_list)


State 159

  150 parameter_type_list: parameter_list .
  151                    | parameter_list . COMMA ELLIPSES
  155 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 246

    $default  reduce using rule 150 (parameter_type_list)


State 160

  144 direct_declarator: direct_declarator L_PARAN X identifier_list . R_PARAN
  157 identifier_list: identifier_list . COMMA IDENTIFIER

    R_PARAN  shift, and go to state 247
    COMMA    shift, and go to state 248


State 161

    7 primary_expression: L_PARAN . expression R_PARAN
   16 postfix_expression: L_PARAN . type_name R_PARAN L_BRACES initializer_list R_BRACES
   17                   | L_PARAN . type_name R_PARAN L_BRACES initializer_list COMMA R_BRACES
   25 unary_expression: SIZEOF L_PARAN . type_name R_PARAN

    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    FLOAT           shift, and go to state 7
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    _BOOL           shift, and go to state 19
    _COMPLEX        shift, and go to state 20
    _IMAGINARY      shift, and go to state 21
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 165
    type_specifier             go to state 166
    type_qualifier             go to state 167
    specifier_qualifier_list   go to state 168
    enum_specifier             go to state 28
    type_name                  go to state 249


State 162

   24 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 163

  139 direct_declarator: direct_declarator L_SQRB STATIC assignment_expression . R_SQRB

    R_SQRB  shift, and go to state 250


State 164

  138 direct_declarator: direct_declarator L_SQRB STATIC type_qualifier_list . assignment_expression R_SQRB
  149 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 78
    VOLATILE        shift, and go to state 18
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 251
    type_qualifier             go to state 73


State 165

    7 primary_expression: L_PARAN expression . R_PARAN
   78 expression: expression . COMMA assignment_expression

    R_PARAN  shift, and go to state 252
    COMMA    shift, and go to state 230


State 166

  115 specifier_qualifier_list: type_specifier .
  116                         | type_specifier . specifier_qualifier_list

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 115 (specifier_qualifier_list)

    type_specifier            go to state 166
    type_qualifier            go to state 167
    specifier_qualifier_list  go to state 253
    enum_specifier            go to state 28


State 167

  117 specifier_qualifier_list: type_qualifier .
  118                         | type_qualifier . specifier_qualifier_list

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 117 (specifier_qualifier_list)

    type_specifier            go to state 166
    type_qualifier            go to state 167
    specifier_qualifier_list  go to state 254
    enum_specifier            go to state 28


State 168

  158 type_name: specifier_qualifier_list .

    $default  reduce using rule 158 (type_name)


State 169

   16 postfix_expression: L_PARAN type_name . R_PARAN L_BRACES initializer_list R_BRACES
   17                   | L_PARAN type_name . R_PARAN L_BRACES initializer_list COMMA R_BRACES
   33 cast_expression: L_PARAN type_name . R_PARAN cast_expression

    R_PARAN  shift, and go to state 255


State 170

    7 primary_expression: L_PARAN . expression R_PARAN
   16 postfix_expression: L_PARAN . type_name R_PARAN L_BRACES initializer_list R_BRACES
   17                   | L_PARAN . type_name R_PARAN L_BRACES initializer_list COMMA R_BRACES

    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    FLOAT           shift, and go to state 7
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    _BOOL           shift, and go to state 19
    _COMPLEX        shift, and go to state 20
    _IMAGINARY      shift, and go to state 21
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 165
    type_specifier             go to state 166
    type_qualifier             go to state 167
    specifier_qualifier_list   go to state 168
    enum_specifier             go to state 28
    type_name                  go to state 256


State 171

   21 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 172

   22 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 173

  142 direct_declarator: direct_declarator L_SQRB MUL R_SQRB .

    $default  reduce using rule 142 (direct_declarator)


State 174

   10 postfix_expression: postfix_expression L_PARAN . R_PARAN
   11                   | postfix_expression L_PARAN . argument_expression_list R_PARAN

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    R_PARAN         shift, and go to state 257
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    argument_expression_list   go to state 258
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 259


State 175

    9 postfix_expression: postfix_expression L_SQRB . expression R_SQRB

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 260


State 176

   12 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 261


State 177

   13 postfix_expression: postfix_expression ARROW_ASSIGN . IDENTIFIER

    IDENTIFIER  shift, and go to state 262


State 178

   14 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 14 (postfix_expression)


State 179

   15 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 15 (postfix_expression)


State 180

   66 assignment_operator: ASSIGN .

    $default  reduce using rule 66 (assignment_operator)


State 181

   67 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 67 (assignment_operator)


State 182

   68 assignment_operator: MINUS_ASSIGN .

    $default  reduce using rule 68 (assignment_operator)


State 183

   69 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 184

   70 assignment_operator: DIVIDE_ASSIGN .

    $default  reduce using rule 70 (assignment_operator)


State 185

   71 assignment_operator: REM_ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


State 186

   72 assignment_operator: L_SHIFT_ASSIGN .

    $default  reduce using rule 72 (assignment_operator)


State 187

   73 assignment_operator: R_SHIFT_ASSIGN .

    $default  reduce using rule 73 (assignment_operator)


State 188

   75 assignment_operator: BIT_AND_ASSIGN .

    $default  reduce using rule 75 (assignment_operator)


State 189

   74 assignment_operator: BIT_OR_ASSIGN .

    $default  reduce using rule 74 (assignment_operator)


State 190

   76 assignment_operator: BIT_XOR_ASSIGN .

    $default  reduce using rule 76 (assignment_operator)


State 191

   65 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 263


State 192

   23 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 23 (unary_expression)


State 193

   35 multiplicative_expression: multiplicative_expression MUL . cast_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 149
    unary_operator      go to state 99
    cast_expression     go to state 264


State 194

   36 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 149
    unary_operator      go to state 99
    cast_expression     go to state 265


State 195

   37 multiplicative_expression: multiplicative_expression REMAINDER . cast_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 149
    unary_operator      go to state 99
    cast_expression     go to state 266


State 196

   39 additive_expression: additive_expression ADD . multiplicative_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 267


State 197

   40 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 268


State 198

   42 shift_expression: shift_expression L_SHIFT . additive_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 269


State 199

   43 shift_expression: shift_expression R_SHIFT . additive_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 270


State 200

   45 relational_expression: relational_expression LESS_THAN . shift_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 271


State 201

   46 relational_expression: relational_expression GREATER_THAN . shift_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 272


State 202

   47 relational_expression: relational_expression LESS_THAN_EQUAL . shift_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 273


State 203

   48 relational_expression: relational_expression GREATER_THAN_EQUAL . shift_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 274


State 204

   50 equality_expression: equality_expression IS_EQUAL . relational_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 275


State 205

   51 equality_expression: equality_expression NOT_EQUAL . relational_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 276


State 206

   53 AND_expression: AND_expression BIT_AND . equality_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 277


State 207

   55 exclusive_OR_expression: exclusive_OR_expression BIT_XOR . AND_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 278


State 208

   57 inclusive_OR_expression: inclusive_OR_expression BIT_OR . exclusive_OR_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 279


State 209

   59 BOOL_AND_expression: BOOL_AND_expression BOOL_AND . M inclusive_OR_expression

    $default  reduce using rule 182 (M)

    M  go to state 280


State 210

   61 BOOL_OR_expression: BOOL_OR_expression BOOL_OR . M BOOL_AND_expression

    $default  reduce using rule 182 (M)

    M  go to state 281


State 211

   63 conditional_expression: BOOL_OR_expression QM . M expression N COLON M conditional_expression

    $default  reduce using rule 182 (M)

    M  go to state 282


State 212

  137 direct_declarator: direct_declarator L_SQRB assignment_expression R_SQRB .

    $default  reduce using rule 137 (direct_declarator)


State 213

  140 direct_declarator: direct_declarator L_SQRB type_qualifier_list STATIC . assignment_expression R_SQRB

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 283


State 214

  136 direct_declarator: direct_declarator L_SQRB type_qualifier_list R_SQRB .

    $default  reduce using rule 136 (direct_declarator)


State 215

   28 unary_operator: MUL .
  141 direct_declarator: direct_declarator L_SQRB type_qualifier_list MUL . R_SQRB

    R_SQRB  shift, and go to state 284

    $default  reduce using rule 28 (unary_operator)


State 216

  134 direct_declarator: direct_declarator L_SQRB type_qualifier_list assignment_expression . R_SQRB

    R_SQRB  shift, and go to state 285


State 217

  200 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 200 (jump_statement)


State 218

  172 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 286


State 219

  199 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 199 (jump_statement)


State 220

  173 labeled_statement: DEFAULT COLON . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 287


State 221

  192 iteration_statement: DO M . statement M WHILE L_PARAN expression_opt2 R_PARAN SEMICOLON

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 288


State 222

  193 iteration_statement: FOR L_PARAN . expression_opt1 SEMICOLON M expression_opt2 SEMICOLON M expression_opt1 N R_PARAN M statement
  194                    | FOR L_PARAN . declaration expression SEMICOLON expression R_PARAN statement
  195                    | FOR L_PARAN . declaration expression SEMICOLON R_PARAN statement
  196                    | FOR L_PARAN . declaration SEMICOLON expression R_PARAN statement
  197                    | FOR L_PARAN . declaration SEMICOLON R_PARAN statement

    AUTO            shift, and go to state 1
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    FLOAT           shift, and go to state 7
    INLINE          shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    REGISTER        shift, and go to state 11
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    STATIC          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    _BOOL           shift, and go to state 19
    _COMPLEX        shift, and go to state 20
    _IMAGINARY      shift, and go to state 21
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    $default  reduce using rule 184 (expression_opt1)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 289
    storage_class_specifier    go to state 22
    type_specifier             go to state 23
    function_specifier         go to state 24
    declaration_specifiers     go to state 63
    declaration                go to state 290
    type_qualifier             go to state 27
    enum_specifier             go to state 28
    expression_opt1            go to state 291


State 223

  198 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 292


State 224

  188 selection_statement: IF L_PARAN . expression_opt2 R_PARAN M statement N ELSE M statement
  189                    | IF L_PARAN . expression_opt2 R_PARAN M statement

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt2)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 293
    expression_opt2            go to state 294


State 225

  202 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 202 (jump_statement)


State 226

   78 expression: expression . COMMA assignment_expression
  201 jump_statement: RETURN expression . SEMICOLON

    COMMA      shift, and go to state 230
    SEMICOLON  shift, and go to state 295


State 227

  190 selection_statement: SWITCH L_PARAN . expression R_PARAN statement

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 296


State 228

  191 iteration_statement: WHILE M . L_PARAN expression_opt2 R_PARAN M statement

    L_PARAN  shift, and go to state 297


State 229

  171 labeled_statement: IDENTIFIER COLON . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 298


State 230

   78 expression: expression COMMA . assignment_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 299


State 231

  180 expression_statement: expression SEMICOLON .

    $default  reduce using rule 180 (expression_statement)


State 232

  174 compound_statement: L_BRACES block_item_list R_BRACES .

    $default  reduce using rule 174 (compound_statement)


State 233

  177 block_item_list: block_item_list M . block_item

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    $default  reduce using rule 182 (M)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    block_item                 go to state 300
    expression_statement       go to state 135
    M                          go to state 136
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 140


State 234

  178 block_item: M declaration .

    $default  reduce using rule 178 (block_item)


State 235

  169 designator: L_SQRB . constant_expression R_SQRB

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 150
    constant_expression        go to state 301


State 236

  170 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 302


State 237

  163 initializer_list: initializer .

    $default  reduce using rule 163 (initializer_list)


State 238

  160 initializer: L_BRACES initializer_list . R_BRACES
  161            | L_BRACES initializer_list . COMMA R_BRACES
  164 initializer_list: initializer_list . COMMA designation initializer
  165                 | initializer_list . COMMA initializer

    R_BRACES  shift, and go to state 303
    COMMA     shift, and go to state 304


State 239

  162 initializer_list: designation . initializer

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 141
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 142
    initializer                go to state 305


State 240

  166 designation: designator_list . ASSIGN
  168 designator_list: designator_list . designator

    L_SQRB  shift, and go to state 235
    DOT     shift, and go to state 236
    ASSIGN  shift, and go to state 306

    designator  go to state 307


State 241

  167 designator_list: designator .

    $default  reduce using rule 167 (designator_list)


State 242

  215 function_definition: declaration_specifiers declarator declaration_list compound_statement Y .

    $default  reduce using rule 215 (function_definition)


State 243

  125 enum_specifier: ENUM IDENTIFIER L_BRACES enumerator_list COMMA R_BRACES .

    $default  reduce using rule 125 (enum_specifier)


State 244

  153 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 153 (parameter_declaration)


State 245

  143 direct_declarator: direct_declarator L_PARAN X parameter_type_list R_PARAN .

    $default  reduce using rule 143 (direct_declarator)


State 246

  151 parameter_type_list: parameter_list COMMA . ELLIPSES
  155 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    ELLIPSES    shift, and go to state 308

    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    function_specifier       go to state 24
    declaration_specifiers   go to state 156
    type_qualifier           go to state 27
    enum_specifier           go to state 28
    parameter_declaration    go to state 309


State 247

  144 direct_declarator: direct_declarator L_PARAN X identifier_list R_PARAN .

    $default  reduce using rule 144 (direct_declarator)


State 248

  157 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 310


State 249

   16 postfix_expression: L_PARAN type_name . R_PARAN L_BRACES initializer_list R_BRACES
   17                   | L_PARAN type_name . R_PARAN L_BRACES initializer_list COMMA R_BRACES
   25 unary_expression: SIZEOF L_PARAN type_name . R_PARAN

    R_PARAN  shift, and go to state 311


State 250

  139 direct_declarator: direct_declarator L_SQRB STATIC assignment_expression R_SQRB .

    $default  reduce using rule 139 (direct_declarator)


State 251

  138 direct_declarator: direct_declarator L_SQRB STATIC type_qualifier_list assignment_expression . R_SQRB

    R_SQRB  shift, and go to state 312


State 252

    7 primary_expression: L_PARAN expression R_PARAN .

    $default  reduce using rule 7 (primary_expression)


State 253

  116 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 116 (specifier_qualifier_list)


State 254

  118 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 118 (specifier_qualifier_list)


State 255

   16 postfix_expression: L_PARAN type_name R_PARAN . L_BRACES initializer_list R_BRACES
   17                   | L_PARAN type_name R_PARAN . L_BRACES initializer_list COMMA R_BRACES
   33 cast_expression: L_PARAN type_name R_PARAN . cast_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 313
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 149
    unary_operator      go to state 99
    cast_expression     go to state 314


State 256

   16 postfix_expression: L_PARAN type_name . R_PARAN L_BRACES initializer_list R_BRACES
   17                   | L_PARAN type_name . R_PARAN L_BRACES initializer_list COMMA R_BRACES

    R_PARAN  shift, and go to state 315


State 257

   10 postfix_expression: postfix_expression L_PARAN R_PARAN .

    $default  reduce using rule 10 (postfix_expression)


State 258

   11 postfix_expression: postfix_expression L_PARAN argument_expression_list . R_PARAN
   19 argument_expression_list: argument_expression_list . COMMA assignment_expression

    R_PARAN  shift, and go to state 316
    COMMA    shift, and go to state 317


State 259

   18 argument_expression_list: assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 260

    9 postfix_expression: postfix_expression L_SQRB expression . R_SQRB
   78 expression: expression . COMMA assignment_expression

    R_SQRB  shift, and go to state 318
    COMMA   shift, and go to state 230


State 261

   12 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 12 (postfix_expression)


State 262

   13 postfix_expression: postfix_expression ARROW_ASSIGN IDENTIFIER .

    $default  reduce using rule 13 (postfix_expression)


State 263

   65 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 65 (assignment_expression)


State 264

   35 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 265

   36 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 266

   37 multiplicative_expression: multiplicative_expression REMAINDER cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 267

   35 multiplicative_expression: multiplicative_expression . MUL cast_expression
   36                          | multiplicative_expression . DIVIDE cast_expression
   37                          | multiplicative_expression . REMAINDER cast_expression
   39 additive_expression: additive_expression ADD multiplicative_expression .

    MUL        shift, and go to state 193
    DIVIDE     shift, and go to state 194
    REMAINDER  shift, and go to state 195

    MUL       [reduce using rule 39 (additive_expression)]
    $default  reduce using rule 39 (additive_expression)


State 268

   35 multiplicative_expression: multiplicative_expression . MUL cast_expression
   36                          | multiplicative_expression . DIVIDE cast_expression
   37                          | multiplicative_expression . REMAINDER cast_expression
   40 additive_expression: additive_expression MINUS multiplicative_expression .

    MUL        shift, and go to state 193
    DIVIDE     shift, and go to state 194
    REMAINDER  shift, and go to state 195

    MUL       [reduce using rule 40 (additive_expression)]
    $default  reduce using rule 40 (additive_expression)


State 269

   39 additive_expression: additive_expression . ADD multiplicative_expression
   40                    | additive_expression . MINUS multiplicative_expression
   42 shift_expression: shift_expression L_SHIFT additive_expression .

    ADD    shift, and go to state 196
    MINUS  shift, and go to state 197

    ADD       [reduce using rule 42 (shift_expression)]
    MINUS     [reduce using rule 42 (shift_expression)]
    $default  reduce using rule 42 (shift_expression)


State 270

   39 additive_expression: additive_expression . ADD multiplicative_expression
   40                    | additive_expression . MINUS multiplicative_expression
   43 shift_expression: shift_expression R_SHIFT additive_expression .

    ADD    shift, and go to state 196
    MINUS  shift, and go to state 197

    ADD       [reduce using rule 43 (shift_expression)]
    MINUS     [reduce using rule 43 (shift_expression)]
    $default  reduce using rule 43 (shift_expression)


State 271

   42 shift_expression: shift_expression . L_SHIFT additive_expression
   43                 | shift_expression . R_SHIFT additive_expression
   45 relational_expression: relational_expression LESS_THAN shift_expression .

    L_SHIFT  shift, and go to state 198
    R_SHIFT  shift, and go to state 199

    $default  reduce using rule 45 (relational_expression)


State 272

   42 shift_expression: shift_expression . L_SHIFT additive_expression
   43                 | shift_expression . R_SHIFT additive_expression
   46 relational_expression: relational_expression GREATER_THAN shift_expression .

    L_SHIFT  shift, and go to state 198
    R_SHIFT  shift, and go to state 199

    $default  reduce using rule 46 (relational_expression)


State 273

   42 shift_expression: shift_expression . L_SHIFT additive_expression
   43                 | shift_expression . R_SHIFT additive_expression
   47 relational_expression: relational_expression LESS_THAN_EQUAL shift_expression .

    L_SHIFT  shift, and go to state 198
    R_SHIFT  shift, and go to state 199

    $default  reduce using rule 47 (relational_expression)


State 274

   42 shift_expression: shift_expression . L_SHIFT additive_expression
   43                 | shift_expression . R_SHIFT additive_expression
   48 relational_expression: relational_expression GREATER_THAN_EQUAL shift_expression .

    L_SHIFT  shift, and go to state 198
    R_SHIFT  shift, and go to state 199

    $default  reduce using rule 48 (relational_expression)


State 275

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_THAN_EQUAL shift_expression
   48                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   50 equality_expression: equality_expression IS_EQUAL relational_expression .

    LESS_THAN           shift, and go to state 200
    GREATER_THAN        shift, and go to state 201
    LESS_THAN_EQUAL     shift, and go to state 202
    GREATER_THAN_EQUAL  shift, and go to state 203

    $default  reduce using rule 50 (equality_expression)


State 276

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_THAN_EQUAL shift_expression
   48                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   51 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESS_THAN           shift, and go to state 200
    GREATER_THAN        shift, and go to state 201
    LESS_THAN_EQUAL     shift, and go to state 202
    GREATER_THAN_EQUAL  shift, and go to state 203

    $default  reduce using rule 51 (equality_expression)


State 277

   50 equality_expression: equality_expression . IS_EQUAL relational_expression
   51                    | equality_expression . NOT_EQUAL relational_expression
   53 AND_expression: AND_expression BIT_AND equality_expression .

    IS_EQUAL   shift, and go to state 204
    NOT_EQUAL  shift, and go to state 205

    $default  reduce using rule 53 (AND_expression)


State 278

   53 AND_expression: AND_expression . BIT_AND equality_expression
   55 exclusive_OR_expression: exclusive_OR_expression BIT_XOR AND_expression .

    BIT_AND  shift, and go to state 206

    BIT_AND   [reduce using rule 55 (exclusive_OR_expression)]
    $default  reduce using rule 55 (exclusive_OR_expression)


State 279

   55 exclusive_OR_expression: exclusive_OR_expression . BIT_XOR AND_expression
   57 inclusive_OR_expression: inclusive_OR_expression BIT_OR exclusive_OR_expression .

    BIT_XOR  shift, and go to state 207

    $default  reduce using rule 57 (inclusive_OR_expression)


State 280

   59 BOOL_AND_expression: BOOL_AND_expression BOOL_AND M . inclusive_OR_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 319


State 281

   61 BOOL_OR_expression: BOOL_OR_expression BOOL_OR M . BOOL_AND_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 320


State 282

   63 conditional_expression: BOOL_OR_expression QM M . expression N COLON M conditional_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 321


State 283

  140 direct_declarator: direct_declarator L_SQRB type_qualifier_list STATIC assignment_expression . R_SQRB

    R_SQRB  shift, and go to state 322


State 284

  141 direct_declarator: direct_declarator L_SQRB type_qualifier_list MUL R_SQRB .

    $default  reduce using rule 141 (direct_declarator)


State 285

  134 direct_declarator: direct_declarator L_SQRB type_qualifier_list assignment_expression R_SQRB .

    $default  reduce using rule 134 (direct_declarator)


State 286

  172 labeled_statement: CASE constant_expression COLON . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 323


State 287

  173 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 173 (labeled_statement)


State 288

  192 iteration_statement: DO M statement . M WHILE L_PARAN expression_opt2 R_PARAN SEMICOLON

    $default  reduce using rule 182 (M)

    M  go to state 324


State 289

   78 expression: expression . COMMA assignment_expression
  185 expression_opt1: expression .

    COMMA  shift, and go to state 230

    $default  reduce using rule 185 (expression_opt1)


State 290

  194 iteration_statement: FOR L_PARAN declaration . expression SEMICOLON expression R_PARAN statement
  195                    | FOR L_PARAN declaration . expression SEMICOLON R_PARAN statement
  196                    | FOR L_PARAN declaration . SEMICOLON expression R_PARAN statement
  197                    | FOR L_PARAN declaration . SEMICOLON R_PARAN statement

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 325

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 326


State 291

  193 iteration_statement: FOR L_PARAN expression_opt1 . SEMICOLON M expression_opt2 SEMICOLON M expression_opt1 N R_PARAN M statement

    SEMICOLON  shift, and go to state 327


State 292

  198 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 198 (jump_statement)


State 293

   78 expression: expression . COMMA assignment_expression
  187 expression_opt2: expression .

    COMMA  shift, and go to state 230

    $default  reduce using rule 187 (expression_opt2)


State 294

  188 selection_statement: IF L_PARAN expression_opt2 . R_PARAN M statement N ELSE M statement
  189                    | IF L_PARAN expression_opt2 . R_PARAN M statement

    R_PARAN  shift, and go to state 328


State 295

  201 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 201 (jump_statement)


State 296

   78 expression: expression . COMMA assignment_expression
  190 selection_statement: SWITCH L_PARAN expression . R_PARAN statement

    R_PARAN  shift, and go to state 329
    COMMA    shift, and go to state 230


State 297

  191 iteration_statement: WHILE M L_PARAN . expression_opt2 R_PARAN M statement

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt2)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 293
    expression_opt2            go to state 330


State 298

  171 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 171 (labeled_statement)


State 299

   78 expression: expression COMMA assignment_expression .

    $default  reduce using rule 78 (expression)


State 300

  177 block_item_list: block_item_list M block_item .

    $default  reduce using rule 177 (block_item_list)


State 301

  169 designator: L_SQRB constant_expression . R_SQRB

    R_SQRB  shift, and go to state 331


State 302

  170 designator: DOT IDENTIFIER .

    $default  reduce using rule 170 (designator)


State 303

  160 initializer: L_BRACES initializer_list R_BRACES .

    $default  reduce using rule 160 (initializer)


State 304

  161 initializer: L_BRACES initializer_list COMMA . R_BRACES
  164 initializer_list: initializer_list COMMA . designation initializer
  165                 | initializer_list COMMA . initializer

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    L_SQRB          shift, and go to state 235
    DOT             shift, and go to state 236
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 141
    R_BRACES        shift, and go to state 332
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 142
    initializer                go to state 333
    designation                go to state 334
    designator_list            go to state 240
    designator                 go to state 241


State 305

  162 initializer_list: designation initializer .

    $default  reduce using rule 162 (initializer_list)


State 306

  166 designation: designator_list ASSIGN .

    $default  reduce using rule 166 (designation)


State 307

  168 designator_list: designator_list designator .

    $default  reduce using rule 168 (designator_list)


State 308

  151 parameter_type_list: parameter_list COMMA ELLIPSES .

    $default  reduce using rule 151 (parameter_type_list)


State 309

  155 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 155 (parameter_list)


State 310

  157 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 157 (identifier_list)


State 311

   16 postfix_expression: L_PARAN type_name R_PARAN . L_BRACES initializer_list R_BRACES
   17                   | L_PARAN type_name R_PARAN . L_BRACES initializer_list COMMA R_BRACES
   25 unary_expression: SIZEOF L_PARAN type_name R_PARAN .

    L_BRACES  shift, and go to state 313

    L_BRACES  [reduce using rule 25 (unary_expression)]
    $default  reduce using rule 25 (unary_expression)


State 312

  138 direct_declarator: direct_declarator L_SQRB STATIC type_qualifier_list assignment_expression R_SQRB .

    $default  reduce using rule 138 (direct_declarator)


State 313

   16 postfix_expression: L_PARAN type_name R_PARAN L_BRACES . initializer_list R_BRACES
   17                   | L_PARAN type_name R_PARAN L_BRACES . initializer_list COMMA R_BRACES

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    L_SQRB          shift, and go to state 235
    DOT             shift, and go to state 236
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 141
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 142
    initializer                go to state 237
    initializer_list           go to state 335
    designation                go to state 239
    designator_list            go to state 240
    designator                 go to state 241


State 314

   33 cast_expression: L_PARAN type_name R_PARAN cast_expression .

    $default  reduce using rule 33 (cast_expression)


State 315

   16 postfix_expression: L_PARAN type_name R_PARAN . L_BRACES initializer_list R_BRACES
   17                   | L_PARAN type_name R_PARAN . L_BRACES initializer_list COMMA R_BRACES

    L_BRACES  shift, and go to state 313


State 316

   11 postfix_expression: postfix_expression L_PARAN argument_expression_list R_PARAN .

    $default  reduce using rule 11 (postfix_expression)


State 317

   19 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 336


State 318

    9 postfix_expression: postfix_expression L_SQRB expression R_SQRB .

    $default  reduce using rule 9 (postfix_expression)


State 319

   57 inclusive_OR_expression: inclusive_OR_expression . BIT_OR exclusive_OR_expression
   59 BOOL_AND_expression: BOOL_AND_expression BOOL_AND M inclusive_OR_expression .

    BIT_OR  shift, and go to state 208

    $default  reduce using rule 59 (BOOL_AND_expression)


State 320

   59 BOOL_AND_expression: BOOL_AND_expression . BOOL_AND M inclusive_OR_expression
   61 BOOL_OR_expression: BOOL_OR_expression BOOL_OR M BOOL_AND_expression .

    BOOL_AND  shift, and go to state 209

    $default  reduce using rule 61 (BOOL_OR_expression)


State 321

   63 conditional_expression: BOOL_OR_expression QM M expression . N COLON M conditional_expression
   78 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 230

    $default  reduce using rule 183 (N)

    N  go to state 337


State 322

  140 direct_declarator: direct_declarator L_SQRB type_qualifier_list STATIC assignment_expression R_SQRB .

    $default  reduce using rule 140 (direct_declarator)


State 323

  172 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 172 (labeled_statement)


State 324

  192 iteration_statement: DO M statement M . WHILE L_PARAN expression_opt2 R_PARAN SEMICOLON

    WHILE  shift, and go to state 338


State 325

  196 iteration_statement: FOR L_PARAN declaration SEMICOLON . expression R_PARAN statement
  197                    | FOR L_PARAN declaration SEMICOLON . R_PARAN statement

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    R_PARAN         shift, and go to state 339
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 340


State 326

   78 expression: expression . COMMA assignment_expression
  194 iteration_statement: FOR L_PARAN declaration expression . SEMICOLON expression R_PARAN statement
  195                    | FOR L_PARAN declaration expression . SEMICOLON R_PARAN statement

    COMMA      shift, and go to state 230
    SEMICOLON  shift, and go to state 341


State 327

  193 iteration_statement: FOR L_PARAN expression_opt1 SEMICOLON . M expression_opt2 SEMICOLON M expression_opt1 N R_PARAN M statement

    $default  reduce using rule 182 (M)

    M  go to state 342


State 328

  188 selection_statement: IF L_PARAN expression_opt2 R_PARAN . M statement N ELSE M statement
  189                    | IF L_PARAN expression_opt2 R_PARAN . M statement

    $default  reduce using rule 182 (M)

    M  go to state 343


State 329

  190 selection_statement: SWITCH L_PARAN expression R_PARAN . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 344


State 330

  191 iteration_statement: WHILE M L_PARAN expression_opt2 . R_PARAN M statement

    R_PARAN  shift, and go to state 345


State 331

  169 designator: L_SQRB constant_expression R_SQRB .

    $default  reduce using rule 169 (designator)


State 332

  161 initializer: L_BRACES initializer_list COMMA R_BRACES .

    $default  reduce using rule 161 (initializer)


State 333

  165 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 165 (initializer_list)


State 334

  164 initializer_list: initializer_list COMMA designation . initializer

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 141
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 142
    initializer                go to state 346


State 335

   16 postfix_expression: L_PARAN type_name R_PARAN L_BRACES initializer_list . R_BRACES
   17                   | L_PARAN type_name R_PARAN L_BRACES initializer_list . COMMA R_BRACES
  164 initializer_list: initializer_list . COMMA designation initializer
  165                 | initializer_list . COMMA initializer

    R_BRACES  shift, and go to state 347
    COMMA     shift, and go to state 348


State 336

   19 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 337

   63 conditional_expression: BOOL_OR_expression QM M expression N . COLON M conditional_expression

    COLON  shift, and go to state 349


State 338

  192 iteration_statement: DO M statement M WHILE . L_PARAN expression_opt2 R_PARAN SEMICOLON

    L_PARAN  shift, and go to state 350


State 339

  197 iteration_statement: FOR L_PARAN declaration SEMICOLON R_PARAN . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 351


State 340

   78 expression: expression . COMMA assignment_expression
  196 iteration_statement: FOR L_PARAN declaration SEMICOLON expression . R_PARAN statement

    R_PARAN  shift, and go to state 352
    COMMA    shift, and go to state 230


State 341

  194 iteration_statement: FOR L_PARAN declaration expression SEMICOLON . expression R_PARAN statement
  195                    | FOR L_PARAN declaration expression SEMICOLON . R_PARAN statement

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    R_PARAN         shift, and go to state 353
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 354


State 342

  193 iteration_statement: FOR L_PARAN expression_opt1 SEMICOLON M . expression_opt2 SEMICOLON M expression_opt1 N R_PARAN M statement

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt2)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 293
    expression_opt2            go to state 355


State 343

  188 selection_statement: IF L_PARAN expression_opt2 R_PARAN M . statement N ELSE M statement
  189                    | IF L_PARAN expression_opt2 R_PARAN M . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 356


State 344

  190 selection_statement: SWITCH L_PARAN expression R_PARAN statement .

    $default  reduce using rule 190 (selection_statement)


State 345

  191 iteration_statement: WHILE M L_PARAN expression_opt2 R_PARAN . M statement

    $default  reduce using rule 182 (M)

    M  go to state 357


State 346

  164 initializer_list: initializer_list COMMA designation initializer .

    $default  reduce using rule 164 (initializer_list)


State 347

   16 postfix_expression: L_PARAN type_name R_PARAN L_BRACES initializer_list R_BRACES .

    $default  reduce using rule 16 (postfix_expression)


State 348

   17 postfix_expression: L_PARAN type_name R_PARAN L_BRACES initializer_list COMMA . R_BRACES
  164 initializer_list: initializer_list COMMA . designation initializer
  165                 | initializer_list COMMA . initializer

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    L_SQRB          shift, and go to state 235
    DOT             shift, and go to state 236
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 141
    R_BRACES        shift, and go to state 358
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 142
    initializer                go to state 333
    designation                go to state 334
    designator_list            go to state 240
    designator                 go to state 241


State 349

   63 conditional_expression: BOOL_OR_expression QM M expression N COLON . M conditional_expression

    $default  reduce using rule 182 (M)

    M  go to state 359


State 350

  192 iteration_statement: DO M statement M WHILE L_PARAN . expression_opt2 R_PARAN SEMICOLON

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt2)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 293
    expression_opt2            go to state 360


State 351

  197 iteration_statement: FOR L_PARAN declaration SEMICOLON R_PARAN statement .

    $default  reduce using rule 197 (iteration_statement)


State 352

  196 iteration_statement: FOR L_PARAN declaration SEMICOLON expression R_PARAN . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 361


State 353

  195 iteration_statement: FOR L_PARAN declaration expression SEMICOLON R_PARAN . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 362


State 354

   78 expression: expression . COMMA assignment_expression
  194 iteration_statement: FOR L_PARAN declaration expression SEMICOLON expression . R_PARAN statement

    R_PARAN  shift, and go to state 363
    COMMA    shift, and go to state 230


State 355

  193 iteration_statement: FOR L_PARAN expression_opt1 SEMICOLON M expression_opt2 . SEMICOLON M expression_opt1 N R_PARAN M statement

    SEMICOLON  shift, and go to state 364


State 356

  188 selection_statement: IF L_PARAN expression_opt2 R_PARAN M statement . N ELSE M statement
  189                    | IF L_PARAN expression_opt2 R_PARAN M statement .

    ELSE      reduce using rule 183 (N)
    ELSE      [reduce using rule 189 (selection_statement)]
    $default  reduce using rule 189 (selection_statement)

    N  go to state 365


State 357

  191 iteration_statement: WHILE M L_PARAN expression_opt2 R_PARAN M . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 366


State 358

   17 postfix_expression: L_PARAN type_name R_PARAN L_BRACES initializer_list COMMA R_BRACES .

    $default  reduce using rule 17 (postfix_expression)


State 359

   63 conditional_expression: BOOL_OR_expression QM M expression N COLON M . conditional_expression

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 149
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 367


State 360

  192 iteration_statement: DO M statement M WHILE L_PARAN expression_opt2 . R_PARAN SEMICOLON

    R_PARAN  shift, and go to state 368


State 361

  196 iteration_statement: FOR L_PARAN declaration SEMICOLON expression R_PARAN statement .

    $default  reduce using rule 196 (iteration_statement)


State 362

  195 iteration_statement: FOR L_PARAN declaration expression SEMICOLON R_PARAN statement .

    $default  reduce using rule 195 (iteration_statement)


State 363

  194 iteration_statement: FOR L_PARAN declaration expression SEMICOLON expression R_PARAN . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 369


State 364

  193 iteration_statement: FOR L_PARAN expression_opt1 SEMICOLON M expression_opt2 SEMICOLON . M expression_opt1 N R_PARAN M statement

    $default  reduce using rule 182 (M)

    M  go to state 370


State 365

  188 selection_statement: IF L_PARAN expression_opt2 R_PARAN M statement N . ELSE M statement

    ELSE  shift, and go to state 371


State 366

  191 iteration_statement: WHILE M L_PARAN expression_opt2 R_PARAN M statement .

    $default  reduce using rule 191 (iteration_statement)


State 367

   63 conditional_expression: BOOL_OR_expression QM M expression N COLON M conditional_expression .

    $default  reduce using rule 63 (conditional_expression)


State 368

  192 iteration_statement: DO M statement M WHILE L_PARAN expression_opt2 R_PARAN . SEMICOLON

    SEMICOLON  shift, and go to state 372


State 369

  194 iteration_statement: FOR L_PARAN declaration expression SEMICOLON expression R_PARAN statement .

    $default  reduce using rule 194 (iteration_statement)


State 370

  193 iteration_statement: FOR L_PARAN expression_opt1 SEMICOLON M expression_opt2 SEMICOLON M . expression_opt1 N R_PARAN M statement

    SIZEOF          shift, and go to state 78
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 85
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95

    $default  reduce using rule 184 (expression_opt1)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 289
    expression_opt1            go to state 373


State 371

  188 selection_statement: IF L_PARAN expression_opt2 R_PARAN M statement N ELSE . M statement

    $default  reduce using rule 182 (M)

    M  go to state 374


State 372

  192 iteration_statement: DO M statement M WHILE L_PARAN expression_opt2 R_PARAN SEMICOLON .

    $default  reduce using rule 192 (iteration_statement)


State 373

  193 iteration_statement: FOR L_PARAN expression_opt1 SEMICOLON M expression_opt2 SEMICOLON M expression_opt1 . N R_PARAN M statement

    $default  reduce using rule 183 (N)

    N  go to state 375


State 374

  188 selection_statement: IF L_PARAN expression_opt2 R_PARAN M statement N ELSE M . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 376


State 375

  193 iteration_statement: FOR L_PARAN expression_opt1 SEMICOLON M expression_opt2 SEMICOLON M expression_opt1 N . R_PARAN M statement

    R_PARAN  shift, and go to state 377


State 376

  188 selection_statement: IF L_PARAN expression_opt2 R_PARAN M statement N ELSE M statement .

    $default  reduce using rule 188 (selection_statement)


State 377

  193 iteration_statement: FOR L_PARAN expression_opt1 SEMICOLON M expression_opt2 SEMICOLON M expression_opt1 N R_PARAN . M statement

    $default  reduce using rule 182 (M)

    M  go to state 378


State 378

  193 iteration_statement: FOR L_PARAN expression_opt1 SEMICOLON M expression_opt2 SEMICOLON M expression_opt1 N R_PARAN M . statement

    BREAK           shift, and go to state 114
    CASE            shift, and go to state 115
    CONTINUE        shift, and go to state 116
    DEFAULT         shift, and go to state 117
    DO              shift, and go to state 118
    FOR             shift, and go to state 119
    GOTO            shift, and go to state 120
    IF              shift, and go to state 121
    RETURN          shift, and go to state 122
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 123
    WHILE           shift, and go to state 124
    INT_CONST       shift, and go to state 80
    FRACTION_CONST  shift, and go to state 81
    FLOAT_CONST     shift, and go to state 82
    CHAR_CONST      shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    IDENTIFIER      shift, and go to state 125
    L_PARAN         shift, and go to state 86
    INCREMENT       shift, and go to state 88
    DECREMENT       shift, and go to state 89
    L_BRACES        shift, and go to state 61
    BIT_AND         shift, and go to state 90
    ADD             shift, and go to state 91
    MINUS           shift, and go to state 92
    MUL             shift, and go to state 127
    NEGATE          shift, and go to state 94
    NOT             shift, and go to state 95
    SEMICOLON       shift, and go to state 128

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    BOOL_AND_expression        go to state 109
    BOOL_OR_expression         go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 129
    expression                 go to state 130
    labeled_statement          go to state 131
    compound_statement         go to state 132
    expression_statement       go to state 135
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    statement                  go to state 379


State 379

  193 iteration_statement: FOR L_PARAN expression_opt1 SEMICOLON M expression_opt2 SEMICOLON M expression_opt1 N R_PARAN M statement .

    $default  reduce using rule 193 (iteration_statement)
